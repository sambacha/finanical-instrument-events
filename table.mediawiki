{| class="wikitable sortable"
! NAME !! CATEGORY !! DESCRIPTION
|-
| NewEquitySwapProduct || Function || Function specification to create an Equity Swap according to the 2018 ISDA CDM Equity Confirmation Template, based on a minimum set of inputs which can (optionally) include a Master Confirmation Agreement. The inputs represent the minimum set of inputs required to create an Equity Swap, either based on an existing Master Confirmation Agreement or as a stand-alone Equity Swap
|-
| NewSingleNameEquityPayout || Function || Function specification to create the equity payout part of an Equity Swap according to the 2018 ISDA CDM Equity Confirmation template.
|-
| NewFloatingPayout || Function || Function specification to create the interest rate (floating) payout part of an Equity Swap according to the 2018 ISDA CDM Equity Confirmation template.
|-
| ResolveEquityContract || Function || Specifies how the updated contract should be constructed in a Equity Reset event.
|-
| EquityPriceObservation || Function || Function specification for the observation of an equity price, based on the attributes of the 'EquityValuation' class.
|-
| EquityAmountPayer || Function || Part 1 Section 12 of the 2018 ISDA CDM Equity Confirmation for Security Equity Swap, Para 71. ' Equity Amount Payer' means: if the Rate Of Return is positive, then the Short Party shall be the Equity Amount Payer; and if the Rate Of Return is negative, then the Long Party shall be the Equity Amount Payer.
|-
| EquitySpot || Function || An external market data lookup for the spot equity price of the reference asset based on a determination method.
|-
| ResolveTimeZoneFromTimeType || Function || Function to resolve a TimeType into a TimeZone based on a determination method.
|-
| EquityCashSettlementAmount || Function || Part 1 Section 12 of the 2018 ISDA CDM Equity Confirmation for Security Equity Swap, Para 72. 'Equity Cash Settlement Amount' means, in respect of an Equity Cash Settlement Date, an amount in the Settlement Currency determined by the Calculation Agent as of the Equity Valuation Date to which the Equity Cash Settlement Amount relates, pursuant to the following formula: Equity Cash Settlement Amount = ABS(Rate Of Return) × Equity Notional Amount.
|-
| ResolveEquityPeriodStartPrice || Function || Resolves the price from the end of the previous period. If first period, then take the initial price.
|-
| ResolveEquityPeriodEndPrice || Function || 
|-
| EquityPerformance || Function || Part 1 Section 12 of the 2018 ISDA CDM Equity Confirmation for Security Equity Swap, Para 75. 'Equity Performance' means, in respect of an Equity Cash Settlement Date, an amount in the Settlement Currency determined by the Calculation Agent as of the Equity Valuation Date to which the Equity Cash Settlement Amount relates, pursuant to the following formula: Equity Performance = (Rate Of Return) × Equity Notional Amount.
|-
| RateOfReturn || Function || Part 1 Section 12 of the 2018 ISDA CDM Equity Confirmation for Security Equity Swap, Para 139. 'Rate Of Return' means, in respect of any Equity Valuation Date, the amount determined pursuant to the following formula: Rate Of Return = (Final Price - Initial Price) / Initial Price.
|-
| EquityNotionalAmount || Function || Part 1 Section 12 of the 2018 ISDA CDM Equity Confirmation for Security Equity Swap, Para 74. 'Equity Notional Amount' means the Number Of Securities times the Initial Price, adjusted, if applicable, as provided in Part 1 Section 2.2, 'Equity Notional Reset'. If 'With Reset' is the Equity Notional Reset Election, then in respect of each Equity Cash Settlement Date: (i) the Equity Notional Amount applicable in respect of the first Equity Cash Settlement Date will be the amount specified as such in the definition of Equity Notional Amount; (ii) the Equity Notional Amount applicable in respect of each subsequent Equity Cash Settlement Date will be the sum of (a) the Equity Notional Amount in respect of the prior Equity Cash Settlement Date and (b) the Equity Performance, whether positive or negative, in respect of the prior Equity Cash Settlement Date; and (iii) the Floating Notional Amount will be adjusted as provided in sub-clauses (i) and (ii) above as though it were an Equity Notional Amount.
|-
| ResolveEquityInitialPrice || Function || 
|-
| StockSplit || Function || Function specification to create the fully-formed business event which represents the impact of a stock split (or a reverse stock split) on an Equity Derivatives contract on a certain date. The function uses the defined adjustmentRatio to adjust the quantity and price as represented in two business events: QuantityChange and termsChange.
|-
| DividendCashSettlementAmount || Function || Based on the following legal text: means, in respect of a Dividend Period and the related Dividend Cash Settlement Date, an amount in the Settlement Currency determined by the Calculation Agent for such Dividend Period to which the Dividend Cash Settlement Amount relates, pursuant to the following formula: Dividend Cash Settlement Amount = Record Amount × Number Of Securities.
|-
| Inception || Function || Function specification to perform an execution and a contract formation in an atomic BusinessEvent.
|-
| Execute || Function || 
|-
| NewExecutionPrimitive || Function || Function specification to compose an execution based on a minimum required set of inputs: product, quantity, parties etc.
|-
| FormContract || Function || Function specification to create the fully-formed business event of entering into a new contract, as a combination of an execution primitive and a contract formation primitive, when there is no allocation involved and the contractual parties are the execution parties. This specification is meant to replace the 'Inception' primitive that previously co-mingled these 2 primitives.
|-
| NewContractFormationPrimitive || Function || Function specification to create a fully-formed contract following execution on a contractual product. The contract can optionally reference a further legal agreement (such as a CSA or a Master Confirmation).
|-
| Reset || Function || 
|-
| NewResetPrimitive || Function || Specifies how a Reset Primitive should be constructed.
|-
| ResolveUpdatedContract || Function || The updated contract should be generated differently in different reset scenarios. This function handles how the contract should update according to which payouts are present within the Economic Terms.
|-
| TransferCash || Function || Function specification to build a transfer event following a reset on a contract
|-
| NewCashTransferPrimitive || Function || Function specification to generate a transfer primitive following a reset. The cashflow is being passed as an input, as currently the cashflow is meant to be part of the reset. At a later stage, we should pass the reset value while the cashflow calculation should be executed as part of this spec.
|-
| ResolveCashflow || Function || A product agnostic function that calculates the amount due to be transfered after a Reset Event.
|-
| ResolveCashSettlementDate || Function || A product agnostic function that resolves the settlement date of the payout for the period in question
|-
| Allocate || Function || Function specification to create the fully-formed business event of allocating an execution based on allocation instructions.
|-
| NewAllocationPrimitive || Function || Function specification to create the fully-formed business event of allocating an execution based on allocation instructions.
|-
| Settle || Function || Function specification to create the Transfer event based on an execution's settlement terms. Initial implementation only supports securities settled via delivery vs payment.
|-
| NewTransferPrimitive || Function || Function specification to create the Transfer primitive based on an execution's settlement terms and instructions. Initial implementation only supports creating transfer primitives from securities settled via delivery vs payment.
|-
| NewQuantityChangePrimitive || Function || A specification of the inputs, outputs and constraints when calculating the after state of a Quantity Change Primitive Event
|-
| NewPriceChangePrimitive || Function || 
|-
| NewTerminatedContractPrimitive || Function || A specification for terminating a contract. A QuantityChangePrimitive is created with the after set with quantity of 0, and the closed state to be Terminated.
|-
| EvaluatePortfolioState || Function || Function specification to evaluate a portfolio's aggregation parameters and return a new portfolio state containing aggregated positions.
|-
| TerminateContract || Function || 
|-
| NewExecutionPrimitiveEvent || Function || 
|-
| NewContractFormationPrimitiveEvent || Function || 
|-
| NewQuantityChangePrimitiveEvent || Function || 
|-
| ClearingInstruction || Data Type || All information required to perform the clear life cycle event
|-
| Clear || Function || Clear function that inputs the alpha contract and clearingInstruction, resulting in the cleared BusinessEvent
|-
| Confirmation || Data Type || A class to specify a trade confirmation.
|-
| ConfirmationStatusEnum || Enumeration || Enumeration for the different types of confirmation status.
|-
| Affirmation || Data Type || A class to specify a trade affirmation.
|-
| AffirmationStatusEnum || Enumeration || Enumeration for the different types of affirmation status.
|-
| AmericanExercise || Data Type || A class defining the exercise period for an American style option together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fees.
|-
| AmountSchedule || Data Type || A class to specify a currency amount or a currency amount schedule.
|-
| AutomaticExercise || Data Type || A type to define automatic exercise of a swaption. With automatic exercise the option is deemed to have exercised if it is in the money by more than the threshold amount on the exercise date.
|-
| BermudaExercise || Data Type || A class defining the Bermuda option exercise dates and the expiration date together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fee.
|-
| BrokerConfirmation || Data Type || Identifies the market sector in which the trade has been arranged.
|-
| CalculationAgent || Data Type || A class defining the ISDA calculation agent responsible for performing duties as defined in the applicable product definitions.
|-
| CalculationPeriodFrequency || Data Type || A class to specify the frequency at which calculation period end dates occur within the regular part of the calculation period schedule and their roll date convention.
|-
| CashSettlementReferenceBanks || Data Type || A class defining the list of reference institutions polled for relevant rates or prices when determining the cash settlement amount for a product where cash settlement is applicable.
|-
| Collateral || Data Type || A type for defining the obligations of the counterparty subject to credit support requirements.
|-
| ContractualMatrix || Data Type || 
|-
| ContractualTermsSupplement || Data Type || A contractual supplement (such as those published by ISDA) and its publication date that will apply to the trade.
|-
| CreditSupportAgreement || Data Type || The agreement executed between the parties and intended to govern collateral arrangement for all OTC derivatives transactions between those parties.
|-
| RelatedAgreement || Data Type || A class for specifying the legal agreements that govern the contract, either as a reference to such agreements when specified as part of the CDM, or through identification of some of the key terms of those documents, such as the type of document, the document identifier, the publisher, the document vintage and the agreement date.
|-
| DocumentationIdentification || Data Type || A class for defining the definitions that govern the document and should include the year and type of definitions referenced, along with any relevant documentation (such as master agreement) and the date it was signed.
|-
| EuropeanExercise || Data Type || A class defining the exercise period for a European style option together with any rules governing the notional amount of the underlying which can be exercised on any given exercise date and any associated exercise fees.
|-
| ExerciseFee || Data Type || A class defining the fee payable on exercise of an option. This fee may be defined as an amount or a percentage of the notional exercised. As a difference with FpML, it extends the BuyerSeller class.
|-
| ExerciseFeeSchedule || Data Type || A class to define a fee or schedule of fees to be payable on the exercise of an option. This fee may be defined as an amount or a percentage of the notional exercised. As a difference with FpML, it extends the BuyerSeller class.
|-
| ExerciseNotice || Data Type || A class defining to whom and where notice of execution should be given. The partyReference refers to one of the principal parties of the trade. If present the exerciseNoticePartyReference refers to a party, other than the principal party, to whom notice should be given.
|-
| ExerciseProcedure || Data Type || A class describing how notice of exercise should be given. This can be either manual or automatic.
|-
| FloatingRateOption || Data Type || Specification of a floating rate option as a floating rate index and tenor.
|-
| FloatingRate || Data Type || A class defining a floating interest rate through the specification of the floating rate index, the tenor, the multiplier schedule, the spread, the qualification of whether a specific rate treatment and/or a cap or floor apply.
|-
| FloatingRateSpecification || Data Type || A class to specify the floating interest rate by extending the floating rate definition with a set of attributes that specify such rate: the initial value specified as part of the trade, the rounding convention, the averaging method and the negative interest rate treatment.
|-
| FutureValueAmount || Data Type || A class defining a currency and a future value date.
|-
| FxRate || Data Type || A class describing the rate of a currency conversion: pair of currency, quotation mode and exchange rate.
|-
| FxSpotRateSource || Data Type || A class defining the rate source and fixing time for an FX rate.
|-
| IndependentAmount || Data Type || A class specifying the Independent Amount as the combination of a payer/receiver, a payment amount, a payment date and an associated payment calculation rule.
|-
| InformationSource || Data Type || A class defining the source for a piece of information (e.g. a rate fix or an FX fixing). The attribute names have been adjusted from FpML to address the fact that the information is not limited to rates.
|-
| InitialFixingDate || Data Type || A CDM class which purpose is to specify the initial fixing date either alongside the FpML interest rate specification as an offset of another date, or alongside the credit derivative specification as an unadjusted date.
|-
| IssuerTradeId || Data Type || A class for a two-parts identifier, such as a USI.
|-
| LastRegularPaymentDate || Data Type || A class which purpose is to provide the ability into the seemingly incompatible representations of the interest rate and equity last payment date.
|-
| ManualExercise || Data Type || A class defining manual exercise, i.e. that the option buyer counterparty must give notice to the option seller of exercise.
|-
| MasterAgreement || Data Type || A class for defining the agreement executed between the parties and intended to govern all OTC derivatives transactions between those parties.
|-
| MasterConfirmation || Data Type || A class for defining the master confirmation agreement executed between the parties.
|-
| Money || Data Type || A class defining a currency amount.
|-
| MultipleExercise || Data Type || A class defining multiple exercises. As defined in the 2000 ISDA Definitions, Section 12.4. Multiple Exercise, the buyer of the option has the right to exercise all or less than all the unexercised notional amount of the underlying swap on one or more days in the exercise period, but on any such day may not exercise less than the minimum notional amount or more than the maximum notional amount, and if an integral multiple amount is specified, the notional exercised must be equal to or, be an integral multiple of, the integral multiple amount. In FpML, MultipleExercise is built upon the PartialExercise.model.
|-
| OptionPhysicalSettlement || Data Type || 
|-
| OtherAgreement || Data Type || A class for defining an agreement executed between parties.
|-
| PartialExercise || Data Type || A class defining partial exercise. As defined in the 2000 ISDA Definitions, Section 12.3 Partial Exercise, the buyer of the option may exercise all or less than all the notional amount of the underlying swap but may not be less than the minimum notional amount (if specified) and must be an integral multiple of the integral multiple amount if specified.
|-
| PaymentDates || Data Type || A class to specify the parameters to generate the payment date schedule, either through a parametric representation or by reference to other dates specified in the instance document (e.g. the reset dates or valuation dates). The CDM representation combines the FpML payment dates representation for interest rate and total return swap products by providing the ability to specify the payment dates as a function of some other dates specified in the instance document.
|-
| PaymentDetail || Data Type || 
|-
| PaymentDiscounting || Data Type || This class corresponds to the FpML PaymentDiscounting.model group for representing the discounting elements that can be associated with a payment.
|-
| PaymentRule || Data Type || A class defining the payment calculation rule. As of FpML 5.10, percentage rule is the only calculation rule that has been specified as part of the standard.
|-
| PremiumExpression || Data Type || This class corresponds to the FpML Premium.model group for representing the option premium when expressed in a way other than an amount.
|-
| Price || Data Type || Generic description of the price concept applicable across product types, which can be expressed in a number of ways other than simply cash price
|-
| PrincipalExchanges || Data Type || A class defining which principal exchanges occur for the stream.
|-
| QuotedCurrencyPair || Data Type || A class that describes the composition of a rate that has been quoted or is to be quoted. This includes the two currencies and the quotation relationship between the two currencies and is used as a building block throughout the FX specification.
|-
| RateObservation || Data Type || A class defining parameters associated with an individual observation or fixing. This class forms part of the cashflow representation of a stream.
|-
| ResetFrequency || Data Type || A class defining the reset frequency. In the case of a weekly reset, also specifies the day of the week that the reset occurs. If the reset frequency is greater than the calculation period frequency the this implies that more or more reset dates is established for each calculation period and some form of rate averaging is applicable. The specific averaging method of calculation is specified in FloatingRateCalculation. In case the reset frequency is of value T (term), the period is defined by the swap/swapStream/calculationPerioDates/effectiveDate and the swap/swapStream/calculationPerioDates/terminationDate.
|-
| Resource || Data Type || Describes the resource that contains the media representation of a business event (i.e used for stating the Publicly Available Information). For example, can describe a file or a URL that represents the event. This type is an extended version of a type defined by RIXML (www.rixml.org). Rosetta restricts the FpML implementation by not providing the ability to associated a document in hexadecimalBinary or base64Binary until such time that actual use cases will come up.
|-
| ResourceLength || Data Type || A class to indicate the length of the resource.
|-
| SettlementBase || Data Type || A base class to be extended by the SettlementTerms, CashSettlementTerms and PhysicalSettlementTerms classes.
|-
| SettlementTerms || Data Type || A class to specify the settlement terms. This class reflects the FpML OptionSettlement.model, although with no option reference.
|-
| SettlementRateSource || Data Type || A class describing the method for obtaining a settlement rate.
|-
| SimplePayment || Data Type || A class to specified payments in a simpler fashion than the Payment type. This construct should be used from the FpML version 4.3 onwards.
|-
| SpreadSchedule || Data Type || Adds an optional spread type element to the Schedule to identify a long or short spread value.
|-
| Strike || Data Type || A class describing a single cap or floor rate.
|-
| StrikeSchedule || Data Type || A class describing a schedule of cap or floor rates.
|-
| StubFloatingRate || Data Type || A class defining a floating rate.
|-
| StubValue || Data Type || A type defining how a stub calculation period amount is calculated. A single floating rate tenor different to that used for the regular part of the calculation periods schedule may be specified, or two floating rate tenors many be specified. If two floating rate tenors are specified then Linear Interpolation (in accordance with the 2000 ISDA Definitions, Section 8.3 Interpolation) is assumed to apply. Alternatively, an actual known stub rate or stub amount may be specified.
|-
| TradeDate || Data Type || A class to specify the contract's trade date alongside an identifier.
|-
| PartyRoleForParty || Function || 
|-
| PartyByRole || Function || Given a collection of party role containers and a party role, return the party for that role if found in the collection
|-
| EntityTypeEnum || Enumeration || The enumerated values to specify the reference entity types corresponding to a list of types defined in the ISDA First to Default documentation.
|-
| PayerReceiverEnum || Enumeration || The enumerated values to specify an interest rate stream payer or receiver party.
|-
| AccountTypeEnum || Enumeration || The enumeration values to qualify the type of account.
|-
| NaturalPersonRoleEnum || Enumeration || The enumerated values for the natural person's role.
|-
| PartyIdSourceEnum || Enumeration || The enumeration values associated with party identifier sources.
|-
| PartyRoleEnum || Enumeration || The enumerated values for the party role. The enumerated values go beyond the FpML partyRoleScheme as they also include elements that are part of the FpML Trade, such as the Barrier Determination Agent and the Hedging Party.
|-
| TelephoneTypeEnum || Enumeration || The enumerated values to specify the type of telephone number, e.g. work vs. mobile.
|-
| AssignedIdentifier || Data Type || A class to specify the identifier value and its associated version.
|-
| Identifier || Data Type || A class to specify a generic identifier, applicable to CDM artefacts such as executions, contracts, lifecycle events and legal documents. An issuer can be associated with the actual identifier value as a way to properly qualify it.
|-
| ExecutingEntity || Data Type || 
|-
| FxMarkToMarket || Function || Representation of sample mark to market calculation provided by a member firm.
|-
| InterpolateForwardRate || Function || 
|-
| BondOptionStrike || Data Type || A class to specify the strike of a bond or convertible bond option.
|-
| MakeWholeAmount || Data Type || A class to specify the amount to be paid by the buyer of the option if the option is exercised prior to the Early Call Date (typically applicable to the convertible bond options).
|-
| ReferenceSwapCurve || Data Type || A complex type used to specify the option and convertible bond option strike when expressed in reference to a swap curve.
|-
| SwapCurveValuation || Data Type || A class to specify a valuation swap curve, which is used as part of the strike construct for the bond and convertible bond options.
|-
| ActualPrice || Data Type || 
|-
| CommoditySet || Data Type || 
|-
| ConstituentWeight || Data Type || A class describing the weight of each of the underlier constituent within the basket, either in absolute or relative terms.
|-
| DividendPayout || Data Type || A class describing the dividend payout ratio associated with an equity underlier. In certain cases the actual ratio is not known on trade inception, and only general conditions are then specified.
|-
| Underlier || Data Type || A class describing the whole set of possible underliers: single underliers or multiple underliers, each of these having either security or index components.
|-
| Asian || Data Type || As per ISDA 2002 Definitions.
|-
| AveragingObservationList || Data Type || An unordered list of weighted averaging observations.
|-
| AveragingPeriod || Data Type || Period over which an average value is taken.
|-
| AveragingSchedule || Data Type || Class to representing a method for generating a series of dates.
|-
| Barrier || Data Type || As per ISDA 2002 Definitions.
|-
| CalendarSpread || Data Type || A type for defining a calendar spread feature.
|-
| Composite || Data Type || Specifies the conditions to be applied for converting into a reference currency when the actual currency rate is not determined upfront.
|-
| CreditEvents || Data Type || A class to specify the applicable Credit Events that would trigger a settlement, as specified in the related Confirmation and defined in the ISDA 2014 Credit Definition article IV section 4.1.
|-
| CreditEventNotice || Data Type || 
|-
| FailureToPay || Data Type || 
|-
| FeaturePayment || Data Type || Payment made following trigger occurrence.
|-
| FxFeature || Data Type || A type for defining FX Features.
|-
| GracePeriodExtension || Data Type || 
|-
| Knock || Data Type || Knock In means option to exercise comes into existence. Knock Out means option to exercise goes out of existence.
|-
| NotifyingParty || Data Type || 
|-
| OptionDenomination || Data Type || Class which corresponds to the FpML OptionDenomination.model group.
|-
| OptionFeature || Data Type || A class for defining option features.
|-
| OptionProvision || Data Type || A class for defining option provisions.
|-
| OptionSettlement || Data Type || The option settlement terms, which can either be cash, physical, or fx-based cash-settlement. This class can be used for both the settlement of options or forwards.
|-
| OptionStrike || Data Type || A class to specify the option strike.
|-
| OptionStyle || Data Type || The qualification of the option style: American, Bermuda or European. FpML implements those features as part of a substitution group.
|-
| PassThrough || Data Type || Type which contains pass through payments.
|-
| PassThroughItem || Data Type || Class to represent a single pass through payment.
|-
| PubliclyAvailableInformation || Data Type || 
|-
| Quanto || Data Type || Determines the currency rate that the seller of the equity amounts will apply at each valuation date for converting the respective amounts into a currency that is different from the currency denomination of the underlier.
|-
| Restructuring || Data Type || 
|-
| StrategyFeature || Data Type || A class for defining option strategy features.
|-
| StrikeSpread || Data Type || A class for defining a strike spread feature.
|-
| Trigger || Data Type || Trigger point at which feature is effective.
|-
| TriggerEvent || Data Type || Observation point for trigger.
|-
| WeightedAveragingObservation || Data Type || A single weighted averaging observation.
|-
| AdditionalFixedPayments || Data Type || A class to specify the events that will give rise to the payment additional fixed payments.
|-
| BasketReferenceInformation || Data Type || CDS Basket Reference Information.
|-
| CalculationAmount || Data Type || 
|-
| CashSettlementTerms || Data Type || In FpML, PhysicalSettlementTerms and CashSettlementTerms extend SettlementTerms. In the CDM, this extension paradigm has not been used because SettlementTerms class has been used for purposes related to securities transactions, while it is not used as such in the FpML standard (i.e. only as an abstract construct.
|-
| DeliverableObligations || Data Type || A class to specify all the ISDA terms relevant to defining the deliverable obligations.
|-
| FloatingAmountEvents || Data Type || A class to specify the ISDA terms relating to the floating rate payment events and the implied additional fixed payments, applicable to the credit derivatives transactions on mortgage-backed securities with pay-as-you-go or physical settlement.
|-
| FloatingAmountProvisions || Data Type || 
|-
| IndexReferenceInformation || Data Type || A class defining a Credit Default Swap Index.
|-
| InterestShortFall || Data Type || A class to specify the interest shortfall floating rate payment event.
|-
| LoanParticipation || Data Type || A class to specify loan with a participation agreement whereby the buyer is capable of creating, or procuring the creation of, a contractual right in favour of the seller that provides the seller with recourse to the participation seller for a specified share in any payments due under the relevant loan which are received by the participation seller. ISDA 2003 Term: Direct Loan Participation.
|-
| MultipleValuationDates || Data Type || 
|-
| PCDeliverableObligationCharac || Data Type || A class to specify the Partial Cash Deliverable Obligation Characteristic.
|-
| PhysicalSettlementPeriod || Data Type || 
|-
| PhysicalSettlementTerms || Data Type || In FpML, PhysicalSettlementTerms and CashSettlementTerms extend SettlementTerms. In the CDM, this extension paradigm has not been used because SettlementTerms class has been used for purposes related to securities transactions, while it is not used as such in the FpML standard (i.e. only as an abstract construct.
|-
| ProtectionTerms || Data Type || A class to specify the terms for calculating a payout to protect the buyer of the swap in the case of a qualified credit event. These terms include the notional amount, the applicable credit events, the reference obligation, and in the case of a CDS on mortgage-backed securities, the floatingAmountEvents.
|-
| ReferenceInformation || Data Type || A class specifying the Credit Default Swap Reference Information.
|-
| ReferenceObligation || Data Type || A class to specify the reference obligation that is associated with a credit derivative instrument.
|-
| ReferencePair || Data Type || 
|-
| ReferencePool || Data Type || This type contains all the reference pool items to define the reference entity and reference obligation(s) in the basket.
|-
| ReferencePoolItem || Data Type || This type contains all the constituent weight and reference information.
|-
| SettledEntityMatrix || Data Type || A class to specify the Relevant Settled Entity Matrix.
|-
| SingleValuationDate || Data Type || A class to specify the number of business days after satisfaction of all conditions to settlement.
|-
| Tranche || Data Type || The class to represent a CDS Tranche.
|-
| ValuationDate || Data Type || 
|-
| ObligationCategoryEnum || Enumeration || The enumerated values used in both the obligations and deliverable obligations of the credit default swap to represent a class or type of securities which apply.
|-
| BusinessCenterEnum || Enumeration || The enumerated values to specify the business centers.
|-
| BusinessDayConventionEnum || Enumeration || The enumerated values to specify the convention for adjusting any relevant date if it would otherwise fall on a day that is not a valid business day.
|-
| DayOfWeekEnum || Enumeration || The enumerated values to specify a day of the seven-day week.
|-
| DayTypeEnum || Enumeration || The enumerated values to specify the day type classification used in counting the number of days between two dates.
|-
| PeriodEnum || Enumeration || The enumerated values to specify the period, e.g. day, week.
|-
| PeriodExtendedEnum || Enumeration || The enumerated values to specify a time period containing the additional value of Term.
|-
| PeriodTimeEnum || Enumeration || The enumeration values to specify a time period containing additional values such as Term.
|-
| TimeUnitEnum || Enumeration || The enumeration values to qualify the allowed units of time.
|-
| CallingPartyEnum || Enumeration || Identifies a party to the on-demand repo transaction that has a right to demand for termination of the repo transaction.
|-
| ClosedStateEnum || Enumeration || The enumerated values to specify what led to the contract or execution closure.
|-
| PackageTypeEnum || Enumeration || The enumerated values to specify the type of package transaction.
|-
| MarginTypeEnum || Enumeration || This indicator defines which type of assets (cash or securities) is specified to apply as margin to the repo transaction.
|-
| RepoDurationEnum || Enumeration || A duration code for a Repo (or Securities Lending) transaction. There are many business and market rules that are derived from the duration of the transaction.
|-
| NotDomesticCurrency || Data Type || A class to specify the ISDA 2003 Term: Not Domestic Currency.
|-
| Obligations || Data Type || A class to specify the underlying obligations of the reference entity on which protection is purchased or sold through the Credit Default Swap.
|-
| SpecifiedCurrency || Data Type || 
|-
| AgencyRatingCriteria || Data Type || A class to specify multiple credit notations alongside a conditional 'any' or 'all' qualifier.
|-
| CollateralIssuerType || Data Type || A class to allow specification of the type of entity issuing the collateral.
|-
| QuasiGovernmentIssuerType || Data Type || A class to allow specification of different types of Quasi Government collateral.
|-
| RegionalGovernmentIssuerType || Data Type || A class to allow specification of different type of Regional government collateral.
|-
| SpecialPurposeVehicleIssuerType || Data Type || A class to allow specification of different types of special purpose vehicle (SPV) collateral.
|-
| CollateralProductType || Data Type || A class to allow specification of the asset product type.
|-
| CollateralValuationPercentage || Data Type || 
|-
| EligibleCollateral || Data Type || Set of criteria used to specify eligible collateral.
|-
| EligibleCollateralCriteria || Data Type || Criteria used to specify eligible collateral.
|-
| IssuerCriteria || Data Type || Criteria used to specify eligible collateral issuers.
|-
| ProductCriteria || Data Type || Criteria used to specify eligible collateral assets.
|-
| BondType || Data Type || Specification of the type of bond
|-
| BondEconomics || Data Type || Specification of the economics of the bond
|-
| AdditionalTypeEnum || Enumeration || The enumerated values to specify the Additional Type of transaction that can require the collection or delivery of initial margin under a given regulatory regime for the purposes of Covered Transactions, as specified in ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (b)(B).
|-
| AmendmentEffectiveDateEnum || Enumeration || The enumerated values to specify the effective date of the Amendment to Termination Currency when specified as a specific date (e.g. the annex date). ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (t).
|-
| CollateralAssetDefinitionsEnum || Enumeration || The ISDA Collateral Assets Definitions as published by ISDA in the 2003 ISDA Collateral Asset Definitions.
|-
| CreditRatingAgencyEnum || Enumeration || The enumerated values to specify the rating agencies.
|-
| DeliveryAmountElectionEnum || Enumeration || The enumerated values to specify the application of Interest Amount with respect to the Delivery Amount through standard language. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(ii).
|-
| HoldingPostedCollateralEnum || Enumeration || The enumerated values to specify condition(s) required by a party from the other party to hold its posted collateral. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (h)(i): Eligibility to Hold Posted Collateral (VM); Custodians (VM).
|-
| IndependentAmountEligibilityEnum || Enumeration || The enumerated values to specify the instances where the independent amount eligible collateral is not defined as a set of eligible collateral assets.
|-
| InterestAdjustmentPeriodicityEnum || Enumeration || The enumerated values to specify the interest adjustment periodicity election through standard language. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(ii).
|-
| LegalAgreementNameEnum || Enumeration || The enumerated values to specify the legal agreement name.
|-
| LegalAgreementPublisherEnum || Enumeration || The enumerated values to specify the legal agreement publisher.
|-
| MarginApproachEnum || Enumeration || 2018 Credit Suport Annex For Initial Margin, Paragraph 3: Credit Support Obligations. (c) (iii) Margin Approach.
|-
| NoThresholdEnum || Enumeration || The enumerated value to specify the fact that no threshold applies.
|-
| RegulatoryRegimeEnum || Enumeration || The enumerated values to specify the regulatory regimes. The display name corresponds to the regulatory regime name or acronym specified as part of the Regime table in the ISDA CSA for Initial Margin, paragraph 13, General Principles. 2016 ISDA Credit Support Annex for Initial Margin, paragraph 13, General Principles: Regime. | 2018 ISDA Credit Support Annex for Initial Margin, paragraph 13, General Principles: Regime.
|-
| SensitivitiesEnum || Enumeration || The enumerated values to specify the methodology according to which sensitivities to (i) equity indices, funds and ETFs, and (ii) commodity indices are computed. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (gg)(2).
|-
| SimmExceptionEnum || Enumeration || The enumerated values to specify the SIMM normalized exceptions applicable to the ISDA 2018 Standard CSA. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles. | ISDA 2018 Credit Support Annex for Initial Margin, paragraph 13, General Principles.
|-
| SimmExceptionApplicableEnum || Enumeration || The enumerated values to the specify the SIMM normalized exception approaches applicable to the ISDA 2018 Standard CSA. ISDA 2018 Credit Support Annex for Initial Margin, paragraph 13, General Principles.
|-
| RecalculationOfValueElectionEnum || Enumeration || The enumerated values to specify the Recalculation of Value Terms applicable to the...
|-
| ConditionsPrecedentEnum || Enumeration || The enumerated values to specify the Conditions Precedent applicable to the...
|-
| ExecutionLocationEnum || Enumeration || The enumerated values to specify the Execution Location of a Security Agreement
|-
| SecurityAgreementTypeEnum || Enumeration || The enumerated values to specify the Security Agreement governing the transaction.
|-
| ActionEnum || Enumeration || The enumeration values to specify the actions associated with transactions.
|-
| AssetTransferTypeEnum || Enumeration || The qualification of the type of asset transfer.
|-
| CashflowTypeEnum || Enumeration || The qualification of the type of cash flows associated with OTC derivatives contracts and their lifecycle events.
|-
| CommodityReferencePriceEnum || Enumeration || The enumeration values to specify the Commodity Reference Prices specified in the Annex to the 2005 ISDA Commodity Definitions.
|-
| CreditLimitTypeEnum || Enumeration || The enumeration values to qualify the type of credit limits.
|-
| EventTimestampQualificationEnum || Enumeration || The enumeration values to qualify the timestamps that can be associated with a lifecycle event. The reason for such approach is that the experience of integrating the DTCC and CME data representations suggests that a wide set of timestamps are currently utilized among service providers, while there is not at present an objective set of criteria that could help suggest a defined set of timestamps as part of the CDM. Implementers are expected to evaluate the current enumeration values to determine whether those meet their requirements. If not, they are expected to engage with the CDM team to evaluate the addition of further value(s) to this enumeration, which will then participate to the development of a compendium for further evaluation at a later point in order to determine whether this modeling is appropriate.
|-
| IntentEnum || Enumeration || The enumeration values to qualify the intent associated with a transaction event.
|-
| LimitLevelEnum || Enumeration || The enumeration values to specify the level at which the limit is set: customer business, proprietary business or account level. This is part of the CME specification for clearing credit limits, although not specified as a set of enumerated values as part of the clearing confirmation specification.
|-
| OriginatingEventEnum || Enumeration || The enumeration values to specify the originating event that gave way to the trade.
|-
| PaymentStatusEnum || Enumeration || The enumeration values to specify the payment status.
|-
| PaymentTypeEnum || Enumeration || The enumeration values to specify the type of payment.
|-
| SettlementTypeEnum || Enumeration || The enumeration values to specify how the option is to be settled when exercised.
|-
| TransferStatusEnum || Enumeration || The enumeration values to specify the transfer status.
|-
| TransferSettlementEnum || Enumeration || The enumeration values to specify how the transfer will settle, e.g. DvP.
|-
| WarehouseIdentityEnum || Enumeration || 
|-
| WorkflowStatusEnum || Enumeration || 
|-
| DeliveryAmount || Function || 2018 Credit Support Annex For Initial Margin, Paragraph 3 (a) Delivery Amount (IM). Subject to Paragraphs 4 and 5, upon a demand made by the Secured Party on or promptly following a Calculation Date (IM), if the Delivery Amount (IM) applicable to the Pledgor for that Calculation Date (IM) equals or exceeds the Pledgor’s Minimum Transfer Amount (IM), then the Pledgor will Transfer to the Secured Party Eligible Credit Support (IM) having a Value as of the date of Transfer at least equal to the applicable Delivery Amount (IM) (rounded pursuant to Paragraph 13). Unless otherwise specified in Paragraph 13, the Delivery Amount (IM) applicable to the Pledgor for any Calculation Date (IM) will equal the amount by which: (i) the Credit Support Amount (IM) applicable to the Pledgor exceeds (ii) the Value as of that Calculation Date (IM) of all Posted Credit Support (IM) held by the Secured Party (as adjusted to include any prior Delivery Amount (IM) and to exclude any prior Return Amount (IM), the transfer of which, in either case, has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)).
|-
| ReturnAmount || Function || 2018 Credit Support Annex For Initial Margin, Paragraph 3 (b) Return Amount (IM). Subject to Paragraphs 4 and 5, upon a demand made by the Pledgor on or promptly following a Calculation Date (IM), if the Return Amount (IM) applicable to the Secured Party for that Calculation Date (IM) equals or exceeds the Secured Party’s Minimum Transfer Amount (IM), then the Secured Party will Transfer to the Pledgor Posted Credit Support (IM) specified by the Pledgor in that demand having a Value as of the date of Transfer as close as practicable to (but not more than) the applicable Return Amount (IM) (rounded pursuant to Paragraph 13). Unless otherwise specified in Paragraph 13, the Return Amount (IM) applicable to the Secured Party for any Calculation Date (IM) will equal the amount by which: (i) the Value as of that Calculation Date (IM) of all Posted Credit Support (IM) held by the Secured Party (as adjusted to include any prior Delivery Amount (IM) and to exclude any prior Return Amount (IM), the transfer of which, in either case, has not yet been completed and for which the relevant Regular Settlement Day falls on or prior to such Calculation Date (IM)) exceeds (ii) the Credit Support Amount (IM) applicable to the Pledgor.
|-
| CreditSupportAmount || Function || 
|-
| UndisputedAdjustedPostedCreditSupportAmount || Function || 
|-
| SumPostedCreditSupportItemAmounts || Function || Loops through each PostedCreditSupportItem, calculating the PostedCreditSupportItemAmount (by executing func PostedCreditSupportItemAmount), and summing the result. Currently loops are not supported in the syntax so the loop must be implemented in code.
|-
| PostedCreditSupportItemAmount || Function || Calculates the Value for the given Posted Credit Support item. Value means, unless otherwise specified in Paragraph 13, for any Calculation Date (IM) or other date for which Value is calculated and subject to Paragraph 5 in the case of a dispute, with respect to: (i) save as provided in clause (ii) below, Eligible Collateral (IM) or Posted Collateral (IM) that is: (A) an amount of Cash, the Base Currency Equivalent of such amount multiplied by (VP – HFX); and (B) a security, the Base Currency Equivalent of the bid price obtained by the Calculation Agent (IM) multiplied by (VP – HFX); where: VP equals the applicable Valuation Percentage; and HFX equals the applicable FX Haircut Percentage, provided that, for the purposes of calculating Value under Paragraph 8(b)(iv)(B) or Paragraph 11(a), the VP will be 100% and HFX will be zero; (ii) Posted Collateral (IM) that consists of items that are, in respect of the relevant posting obligation, deemed as of such date to have a Value of zero pursuant to Paragraph 13, zero; and (iii) Other Eligible Support (IM) and Other Posted Support. (IM), as specified in Paragraph 13.
|-
| PostedCreditSupportItem || Data Type || Posted Credit Support item with corresponding Valuation Percentage, FX Haircut Percentage and any related disputed Posted Credit Support valuation.
|-
| Document || Data Type || 
|-
| FinInstrmRptgTxRpt || Data Type || 
|-
| Tx || Data Type || 
|-
| New || Data Type || 
|-
| Sellr || Data Type || 
|-
| Sngl || Data Type || 
|-
| OrdrTrnsmssn || Data Type || 
|-
| DerivInstrmAttrbts || Data Type || 
|-
| UndrlygInstrm || Data Type || 
|-
| AcctOwnr || Data Type || 
|-
| InvstmtDcsnPrsn || Data Type || 
|-
| Buyr || Data Type || 
|-
| Qty || Data Type || 
|-
| FinInstrm || Data Type || 
|-
| Pric || Data Type || 
|-
| Prsn || Data Type || 
|-
| FinInstrmGnlAttrbts || Data Type || 
|-
| Nm || Data Type || 
|-
| SwpOut || Data Type || 
|-
| Othr || Data Type || 
|-
| ExctgPrsn || Data Type || 
|-
| Term || Data Type || 
|-
| Swp || Data Type || 
|-
| SchmeNm || Data Type || 
|-
| RefRate || Data Type || 
|-
| AddtlAttrbts || Data Type || 
|-
| SwpIn || Data Type || 
|-
| Indx || Data Type || 
|-
| Id || Data Type || 
|-
| CalculationAgentModel || Data Type || This class corresponds to the FpML CalculationAgent.model.
|-
| PackageInformation || Data Type || A class defining additional information that may be recorded alongside a transaction package.
|-
| PartyContractInformation || Data Type || A class defining party-specific additional information that may be recorded with respect to a contract.
|-
| PercentageRule || Data Type || A class defining a content model for a calculation rule defined as percentage of the notional amount.
|-
| AveragingMethodEnum || Enumeration || The enumerated values to specify the method of calculation to be used when averaging rates. Per ISDA 2000 Definitions, Section 6.2. Certain Definitions Relating to Floating Amounts.
|-
| RoundingDirectionEnum || Enumeration || The enumerated values to specify the rounding direction and precision to be used in the rounding of a rate.
|-
| UnitEnum || Enumeration || The enumeration values to qualify the units of measure. FpML makes use of the priceQuoteUnitsScheme for specifying the units as part of its commodity implementation. Its scope is however deemed too broad for the CDM, as it includes values such as Amount and BasisPoints. As a result, it is deemed inappropriate as a reference scheme for that enumeration.
|-
| QuantifierEnum || Enumeration || The enumerated values to specify a logical quantification, i.e. either All or Any.
|-
| CompareOp || Enumeration || 
|-
| AssetIdentifier || Data Type || Generic object to specify an identifier for a quantifiable object, which can either be a product, a currency or a rate option.
|-
| Cashflow || Data Type || Class to specify a cashflow, i.e. the outcome of either of computation (e.g. interest accrual) or an assessment of some sort (e.g. a fee). The cashflow can then be turned into a cash transfer, artefact to be used as the input to a payment system or the outcome of it. The associated rosettaKey denotes the ability to associate a hash value to the Cashflow instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| ClosedState || Data Type || A class to qualify the closed state of an execution or a contract through the combination or a state (e.g. terminated, novated) and a set of dates: activity date, effective date and, when relevant, last payment date.
|-
| Contract || Data Type || A class to specify a financial contract object, which can be invoked either within the context of an event, or independently from it. It corresponds to the FpML Trade in the Confirmation view (while the CDM Execution class corresponds to the FpML trade in the Pre-Trade view). The associated rosettaKey denotes the ability to associate a hash value to the Contract instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| ContractualProduct || Data Type || A class to specify the contractual products' economic terms, alongside their product identification and product taxonomy. The contractual product class is meant to be used across the pre-execution, execution and (as part of the Contract) post-execution lifecycle contexts.
|-
| FixedRateSpecification || Data Type || Type defining the specification for a fixed rate.
|-
| QuantityMultiplier || Data Type || Class to specify a mechanism for a quantity to be set as a multiplier to another (reference) quantity, based on a price observation. At the moment this class only supports FX or Equity-linked notional and re-uses existing building blocks for those 2 cases, until such time when component can be made more generic. This captures the case of resetting cross-currency swaps and resetting equity swaps.
|-
| ResolvablePayoutQuantity || Data Type || Generic class to specify the quantity for different payout legs in a contractual product, when that quantity can vary across payout legs or across time. A resolvable quantity can always be resolved into a single quantity from the quantity notation which has a corresponding asset identifier. In addition to the base case, where quantity is directly specified as a number as part of the quantity notation, the other use cases are: (i) quantity based on some pre-defined schedule (eg amortising notional), (ii) quantity based on some pre-defined events (eg resetting cross-currency notional), or quantity set as reference to another quantity (eg equity notional as no. securities x price).
|-
| CrossCurrencyTerms || Data Type || 
|-
| CreditDefaultPayout || Data Type || The credit default payout specification provides the details necessary for determining when a credit payout will be triggered as well as the parameters for calculating the payout and the settlement terms. The associated rosettaKey denotes the ability to associate a hash value to the CreditDefaultPayout instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| EconomicTerms || Data Type || This class represents the full set of price-forming features associated with a contractual product: the payout component, the notional/quantity, the effective and termination date and the date adjustment provisions when applying uniformily across the payout components. This class also includes the legal provisions which have valuation implications: cancelable provision, extendible provision, early termination provision and extraordinary events specification. A rosettaKeyValue is associated to the contractual product economic terms for the purpose of supporting hash-based reconciliations thanks to the fact that its computation doesn't include meta data, such as identifiers, references, schemes and other rosettaKey artefacts. The rosettaKeyValue default implementation is available as part of the generated code as org.isda.cdm.rosettakey.RosettaKeyValueHashFunction.
|-
| EquityPayout || Data Type || The equity payout specification terms. The associated rosettaKey denotes the ability to associate a hash value to the EquityPayout instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| Execution || Data Type || A class to specify an execution, which consists essentially in the economic terms which are agreed between the parties, alongside with the qualification of the type of execution. The associated rosettaKey denotes the ability to associate a hash value to the respective Execution instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| GeneralTerms || Data Type || A class specifying a set of non-monetary terms for the Credit Derivative Transaction, including the buyer and seller and selected items from the ISDA 2014 Credit Definition article II, such as the reference obligation and related terms. The CDM GeneralTerms class corresponds to the FpML GeneralTerms complex type, except that the effectiveDate and scheduledTerminationDate have been positioned as part of the InterestRatePayout class in the CDM instead of in GeneralTerms.
|-
| InterestRatePayout || Data Type || A class to specify all of the terms necessary to define and calculate a cash flow based on a fixed, a floating or an inflation index rate. The interest rate payout can be applied to interest rate swaps and FRA (which both have two associated interest rate payouts), credit default swaps (to represent the fee leg when subject to periodic payments) and equity swaps (to represent the funding leg). The associated rosettaKey denotes the ability to associate a hash value to the InterestRatePayout instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| OptionExercise || Data Type || A class to represent the applicable terms to qualify an option exercise: the option style (e.g. American style option), the exercise procedure (e.g. manual exercise) and the settlement terms (e.g. physical vs. cash).
|-
| OptionPayout || Data Type || The option payout specification terms. The associated rosettaKey denotes the ability to associate a hash value to the respective OptionPayout instantiation for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| SecurityLeg || Data Type || Terms defining a security leg in a securities financing transaction, which can either be the near leg or the far leg and is closely modelled onto the nearLeg and farLeg types in FpML
|-
| SecurityValuation || Data Type || Terms defining the security valuation method as part of a security leg in a securities fianncing transaction and closely modelled onto the CollateralValuation type in FpML.
|-
| SecurityValuationModel || Data Type || The security valuation model choice, which can either be based on nominal amount as for a bond, or on the number of contract units as for equity.
|-
| BondValuationModel || Data Type || Bond valuation model for the security leg in a securities financing transaction, closely modelled onto the BondCollateral.model in FpML.
|-
| BondPriceAndYieldModel || Data Type || Bond price and yield valuation model for the security leg in a securities financing transaction, closely modelled onto the BondPriceAndYield.model in FpML.
|-
| CleanOrDirtyPrice || Data Type || Class specifying the bond price as either clean or dirty in a bond valuation model.
|-
| CleanPrice || Data Type || Class to specify the clean price of a bond in a bond valuation model, with accruals presented separately, and modelled onto the cleanPrice model in BonPriceAndYield.model in FpML.
|-
| RelativePrice || Data Type || Bond price relative to a benchmark, as in a convertible bond.
|-
| BondEquityModel || Data Type || Bond equity model to value convertible bonds and modelled onto BondEquity.model in FpML.
|-
| BondChoiceModel || Data Type || Either a bond or convertible bond.
|-
| UnitContractValuationModel || Data Type || Unit contract model for security valuation, e.g. for equity, modelled onto UnitContract.model in FpML.
|-
| SecurityPayout || Data Type || Security payout specification in case the product payout involves some form of security collateral, as in a securities financing transaction.
|-
| InitialMargin || Data Type || Defines initial margin applied to a repo transaction. Initial margin is an agreed premium to the Purchase Price of a repo to determine the required Market Value of the collateral to be delivered on the Purchase Date. It reflects quality of the collateral. Its aim is to calculate the risk-adjusted or liquidation value of collateral.
|-
| InitialMarginCalculation || Data Type || Defines the initial margin calculation applicable to a single piece of collateral.
|-
| PayoutBase || Data Type || Base class that all payout types should extend. Use case is that some validation rules may need to apply across all payout types, for which the data rule can be written at the base class level
|-
| Payout || Data Type || A class to represent the set of future cashflow methodologies in the form of specific payout class(es) that can be associated for the purpose of specifying a financial product. For example, two interest rate payouts can be combined to specify an interest rate swap, or one interest rate payout can be combined with a credit default payout to specify a credit default swap.
|-
| Product || Data Type || A class to represent a financial product. With respect to contractual products, this class specifies the pre-execution product characteristics (the ContractualProduct class). This class is used as underlying for the option exercise representation, which makes use of the contractualProduct attribute to support the swaption use case, with the exercise into a swap. In a complete workflow, the swaption contract itself then needs to be superseded by a swap contract underpinned by the exercised swap as a contractualProduct.
|-
| TradableProduct || Data Type || Definition of a product as ready to be traded, i.e. included in an execution or contract, by associating a specific price and quantity to this product plus an (optional) mechanism for any potential future quantity adjustment.
|-
| ProductIdentification || Data Type || A class to combine the CDM product qualifier with other product qualifiers, such as the FpML ones. While the CDM product qualifier is derived by the CDM from the product payout features, the other product identification elements are assigned by some external sources and correspond to values specified by other data representation protocols.
|-
| QuantityNotation || Data Type || Specification of a product's quantity as a single, non-negative amount. The asset identifier qualifies the quantity being specified and can be used as a referencing mechanism in the underlying payout legs to 'resolve' the product, by fetching the actual amount from the appropriate quantity notation. For some product cases, several quantity notations can be associated with a single product: e.g. for an Equity Swap, both the notional and (optionally) the number of securities can be specified, with a validation to check that they are consistent in relation to the equity price.
|-
| PriceNotation || Data Type || Object to specify the price of a product as a single number, which can be negative in some cases, and asset identifier so that it can be positioned in the product. For some product cases, several price notations can be associated with a single product: e.g. for an Equity Swap, both the initial equity price and the rate spread can be specified, which allows factoring of the product definition.
|-
| RateSpecificationBase || Data Type || 
|-
| RateSpecification || Data Type || A class to specify the fixed interest rate, floating interest rate or inflation rate.
|-
| StubPeriod || Data Type || A class defining how the initial or final stub calculation period amounts is calculated. For example, the rate to be applied to the initial or final stub calculation period may be the linear interpolation of two different tenors for the floating rate index specified in the calculation period amount component, e.g. A two month stub period may used the linear interpolation of a one month and three month floating rate. The different rate tenors would be specified in this component. Note that a maximum of two rate tenors can be specified. If a stub period uses a single index tenor and this is the same as that specified in the calculation period amount component then the initial stub or final stub component, as the case may be, must not be included.
|-
| TransactedPrice || Data Type || A class to represent the transacted price attributes that are positioned as part of the FpML FeeLeg.
|-
| Position || Data Type || A Position describes how much of a given Product is being held and constitutes the atomic element of a Portfolio.
|-
| PositionStatusEnum || Enumeration || Enumeration to describe the different (risk) states of a Position, whether executed, settled, matured...etc
|-
| PortfolioState || Data Type || State-full representation of a Portfolio that describes all the positions held at a given time, in various states which can be either traded, settled, etc., with lineage information to the previous state
|-
| AggregationParameters || Data Type || Parameters to be used to filter events that are relevant to a given portfolio in order to calculate the state of this portfolio. The attributes correspond to all the possible aggregation criteria that can be used and these criteria can be combined. All the attributes are optional.
|-
| Portfolio || Data Type || A Portfolio represents an aggregation of multiple Positions, by describing the parameters that this Portfolio should be aggregated based on. The resulting PortfolioState is calculated using these aggregation parameters as inputs, by aggregating all the Events that are relevant to this Portfolio. The concept of Portfolio works at all levels in the model: from the highest for a given LegalEntity for instance, to the lowest to account for security substitutions in a secutity financing transaction. As such, Portfolio can be used either above or below the Contract level.
|-
| CreditDefaultSwap || Function || This product qualification is temporary until such time that the ISDA Credit Group specifies a proper taxonomy for credit derivatives that is based upon economic terms.
|-
| CreditDefaultSwaption || Function || This product qualification is temporary until such time that the ISDA Credit Group specifies a proper taxonomy for credit derivatives that is based upon economic terms.
|-
| EquitySwap_PriceReturnBasicPerformance_SingleName || Function || The Price Return Basic Performance equity swap specified in the ISDA taxonomy V2.0 corresponds to the price and total return swaps.
|-
| EquitySwap_ParameterReturnDividend_SingleName || Function || The Parameter Return Dividend equity swap specified in the ISDA taxonomy V2.0 corresponds to the dividend return swap.
|-
| InterestRate_IRSwap_Basis || Function || 
|-
| InterestRate_IRSwap_FixedFloat_PlainVanilla || Function || This product qualification doesn't represent the exact terms of the ISDA Taxonomomy V2.0 for the plain vanilla swaps, as some of those cannot be represented as part of the CDM syntax (e.g. the qualification that there is no provision for early termination which uses an off-market valuation), while some other are deemed missing in the ISDA taxonomy and have been added as part of the CDM (absence of cross-currency settlement provision, absence of fixed rate and notional step schedule, absence of stub).
|-
| InterestRate_IRSwap_FixedFloat || Function || 
|-
| InterestRate_IRSwap_FixedFixed || Function || 
|-
| InterestRate_CrossCurrency_Basis || Function || 
|-
| InterestRate_CrossCurrency_FixedFloat || Function || 
|-
| InterestRate_CrossCurrency_FixedFixed || Function || 
|-
| InterestRate_IRSwap_FixedFloat_ZeroCoupon || Function || 
|-
| InterestRate_IRSwap_FixedFloat_OIS || Function || 
|-
| InterestRate_IRSwap_Basis_OIS || Function || 
|-
| InterestRate_InflationSwap_FixedFloat_YearOn_Year || Function || 
|-
| InterestRate_InflationSwap_FixedFloat_ZeroCoupon || Function || 
|-
| InterestRate_InflationSwap_Basis_YearOn_Year || Function || 
|-
| InterestRate_InflationSwap_Basis_ZeroCoupon || Function || 
|-
| InterestRate_Option_Swaption || Function || 
|-
| InterestRate_Option_DebtOption || Function || 
|-
| InterestRate_CapFloor || Function || 
|-
| InterestRate_Fra || Function || 
|-
| ForeignExchange || Function || 
|-
| ForeignExchange_NDF || Function || 
|-
| RepurchaseAgreement || Function || 
|-
| BuyerSeller || Data Type || This class corresponds to the FpML BuyerSeller.model construct.
|-
| PayerReceiver || Data Type || A class to represent the FpML PayerReceiver.model.
|-
| ReferenceBank || Data Type || A class to describe an institution (party) identified by means of a coding scheme and an optional name.
|-
| RelatedParty || Data Type || 
|-
| Account || Data Type || A class to specify an account as an account number alongside, optionally. an account name, an account type, an account beneficiary and a servicing party.
|-
| Address || Data Type || A class to specify a post or street address.
|-
| BusinessUnit || Data Type || A class to specify an organizational unit.
|-
| ContactInformation || Data Type || A class to specify contact information associated with a party: telephone, postal/street address, email and web page.
|-
| LegalEntity || Data Type || A class to specify a legal entity, with a required name and an optional entity identifier (such as the LEI).
|-
| NaturalPerson || Data Type || A class to represent the attributes that are specific to a natural person.
|-
| NaturalPersonRole || Data Type || A class to specify the role(s) that natural person(s) may have in relation to the contract.
|-
| Party || Data Type || A class to specify a party, without a qualification as to whether this party is a legal entity or a natural person, although the model provides the ability to associate a person (or set of persons) to a party, which use case would imply that such party would be a legal entity (even if not formally specified as such).
|-
| PartyContactInformation || Data Type || A class to specify contact information within a party: address and, optionally, associated business unit and person. This class also supports the ISDA CSA representation as a single string, through the address attribute.
|-
| PartyRole || Data Type || A class to specify the role(s) that party(ies) may have in relation to the execution, contract or other legal agreement.
|-
| TelephoneNumber || Data Type || A class to specify a telephone number as a type of phone number (e.g. work, personal, ...) alongside with the actual number.
|-
| TimeZoneFromBusinessCenterTime || Function || Function to resolve a time passed as BusinessCenterTime into a TimeZone time.
|-
| ResolveAdjustableDate || Function || 
|-
| ToDateTime || Function || 
|-
| AssetClassEnum || Enumeration || The enumerated values to specify the FpML asset class categorization.
|-
| MortgageSectorEnum || Enumeration || The enumerated values to specify a mortgage typology.
|-
| ProductIdSourceEnum || Enumeration || The enumerated values to specify the product identifier source. FpML doesn't specify a list of values.
|-
| TaxonomySourceEnum || Enumeration || The enumerated values to specify taxonomy sources.
|-
| ISOCurrencyCodeEnum || Enumeration || The enumerated values to specify standard currency codes according to the International Standards Organization (ISO). The set of codes in this enumerated list is sourced from ISO Standard 4217 (https://www.currency-iso.org/en/home/tables/table-a1.html), as of 29-Aug-18.
|-
| CurrencyCodeEnum || Enumeration || Union of the enumerated values defined by the International Standards Organization (ISO) and the FpML nonISOCurrencyScheme which consists of offshore and historical currencies (https://www.fpml.org/coding-scheme/non-iso-currency), as of 28-Oct-2016.
|-
| Quantity || Data Type || A class to specify an amount/number of securities or tangible assets such as a commodity product. The units qualifier is not used if the Quantity class is applied to securities.
|-
| NonNegativeQuantitySchedule || Data Type || Class to specify a non-negative quantity schedule, which is used to define the quantity of a payout leg. This quantity cannot be negative, while direction is specified through a BuyerSeller or PayerReceiver attribute. The only available schedule implementation is a step schedule, specified as a set of date-value pairs. The non-negativity is enforced by using the non-negative quantity and step schedule classes.
|-
| NonNegativeQuantity || Data Type || Class to specify a quantity as a non-negative number, which condition is enforced through a data rule that only applies to the extending class.
|-
| NonNegativeStepSchedule || Data Type || Class to specify a non-negative schedule as a schedule of steps, typically used to define a payout leg with variable quantity. This quantity cannot be negative, while direction is specified through a BuyerSeller or PayerReceiver attribute. The non-negativity is enforced by making use of the non-negative step class.
|-
| NonNegativeStep || Data Type || A class defining a step date and non-negative step value pair. This step definitions are used to define varying rate or amount schedules, e.g. a notional amortisation or a step-up coupon schedule.
|-
| Rounding || Data Type || A class defining a rounding direction and precision to be used in the rounding of a rate.
|-
| Schedule || Data Type || A class defining a schedule of rates or amounts in terms of an initial value and then a series of step date and value pairs. On each step date the rate or amount changes to the new step value. The series of step date and value pairs are optional. If not specified, this implies that the initial value remains unchanged over time.
|-
| Step || Data Type || A class defining a step date and step value pair. This step definitions are used to define varying rate or amount schedules, e.g. a notional amortisation or a step-up coupon schedule.
|-
| QuantityGroups || Data Type || 
|-
| QuantityGroup || Data Type || 
|-
| IssuerTypeEnum || Enumeration || 
|-
| SupraNationalIssuerTypeEnum || Enumeration || 
|-
| CreditRiskEnum || Enumeration || 
|-
| CollateralProductTypeEnum || Enumeration || 
|-
| SecurityTypeEnum || Enumeration || 
|-
| BondClassEnum || Enumeration || 
|-
| EquityTypeEnum || Enumeration || 
|-
| BondSeniorityEnum || Enumeration || 
|-
| BondInterestEnum || Enumeration || 
|-
| BondPrincipalEnum || Enumeration || 
|-
| FundProductTypeEnum || Enumeration || 
|-
| CreditNotationMismatchResolutionEnum || Enumeration || If several agency issue ratings but not equivalent, reference will be made to the lowest/highest available.
|-
| MaturityTypeEnum || Enumeration || 
|-
| Abs || Function || 
|-
| Sum || Function || 
|-
| QuantityEquals || Function || 
|-
| ListsCompare || Function || 
|-
| Max || Function || 
|-
| RoundToNearest || Function || 
|-
| RoundingModeEnum || Enumeration || 
|-
| AdjustableDate || Data Type || A class for defining a date that shall be subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.
|-
| AdjustableDates || Data Type || A class for defining a series of dates that shall be subject to adjustment if they would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the dates.
|-
| AdjustableOrAdjustedDate || Data Type || A class for defining a date that shall be subject to adjustment if it would otherwise fall on a day that is not a business day in the specified business centers, together with the convention for adjusting the date.
|-
| AdjustableOrAdjustedOrRelativeDate || Data Type || This Rosetta class specifies the date as either an unadjusted, adjusted or relative date. It supplements the features of the AdjustableOrAdjustedDate to support the credit default swap option premium, which uses the relative date construct.
|-
| AdjustableOrRelativeDate || Data Type || A class giving the choice between defining a date as an explicit date together with applicable adjustments or as relative to some other (anchor) date.
|-
| AdjustableOrRelativeDates || Data Type || A class giving the choice between defining a series of dates as an explicit list of dates together with applicable adjustments or as relative to some other series of (anchor) dates.
|-
| AdjustedRelativeDateOffset || Data Type || A type defining a date (referred to as the derived date) as a relative offset from another date (referred to as the anchor date) plus optional date adjustments.
|-
| BusinessCenters || Data Type || A class for specifying the business day calendar location used in determining whether a day is a business day or not, either by specifying this business center by reference to an enumerated list that is maintained by the FpML standard, or by reference to such specification when it exists elsewhere as part of the instance document. This class corresponds to the FpML BusinessCentersOrReference.model.
|-
| BusinessCenterTime || Data Type || A class for defining a time with respect to a business day calendar location. For example, 11:00:00 GBLO.
|-
| BusinessDateRange || Data Type || A class defining a range of contiguous business days by defining an unadjusted first date, an unadjusted last date and a business day convention and business centers for adjusting the first and last dates if they would otherwise fall on a non business day in the specified business centers. The days between the first and last date must also be good business days in the specified centers to be counted in the range.
|-
| BusinessDayAdjustments || Data Type || A class defining the business day convention and financial business centers used for adjusting any relevant date if it would otherwise fall on a day that is not a business day in the specified business center.
|-
| DateRange || Data Type || A class defining a contiguous series of calendar dates. The date range is defined as all the dates between and including the first and the last date. The first date must fall before the last date.
|-
| DateList || Data Type || List of dates.
|-
| DateTimeList || Data Type || List of dateTimes.
|-
| Frequency || Data Type || A class for defining a date frequency, e.g. one day, three months, through the combination of an integer value and a standardized period value that is specified as part of an enumeration.
|-
| Offset || Data Type || A class defining an offset used in calculating a new date relative to a reference date, e.g. calendar days, business days, commodity Business days, etc.
|-
| Period || Data Type || A class to define recurring periods or time offsets.
|-
| RelativeDates || Data Type || A class describing a set of dates defined as relative to another set of dates.
|-
| RelativeDateOffset || Data Type || A class defining a date (referred to as the derived date) as a relative offset from another date (referred to as the anchor date). If the anchor date is itself an adjustable date then the offset is assumed to be calculated from the adjusted anchor date. A number of different scenarios can be supported, namely; 1) the derived date may simply be a number of calendar periods (days, weeks, months or years) preceding or following the anchor date; 2) the unadjusted derived date may be a number of calendar periods (days, weeks, months or years) preceding or following the anchor date with the resulting unadjusted derived date subject to adjustment in accordance with a specified business day convention, i.e. the derived date must fall on a good business day; 3) the derived date may be a number of business days preceding or following the anchor date. Note that the businessDayConvention specifies any required adjustment to the unadjusted derived date. A negative or positive value in the periodMultiplier indicates whether the unadjusted derived precedes or follows the anchor date. The businessDayConvention should contain a value NONE if the day type element contains a value of Business (since specifying a negative or positive business days offset would already guarantee that the derived date would fall on a good business day in the specified business centers).
|-
| TimeZone || Data Type || The time alongside with the timezone location information. This class makes use of the FpML TimezoneLocation construct.
|-
| DateGroup || Data Type || 
|-
| PeriodRange || Data Type || The period range defined as either a lower and upper period bound, or both.
|-
| PeriodBound || Data Type || The period bound is defined as a period and whether the bound is inclusive.
|-
| PrimitiveEvent || Data Type || A primitive event is defined by one and only one atomic change in state of a trade. An example of this is a contract formation where the legal terms of the contact are added to the trade. A Primitive event contains a before and after state where the before is a reference to another after state of a primitive event in order to preserve lineage.
|-
| ExecutionPrimitive || Data Type || Specification of the primitive event for an execution, with 'after' state being an ExecutionState and the 'before' state being Null. It is expected that the 'before' state will be adjusted or deprecated once the CDM scope is extended to the pre-execution space.
|-
| ContractFormationPrimitive || Data Type || Specification of the primitive event for the formation of a contract, with 'before' state being an 'ExecutionState' and 'after' state being a 'PostInceptionState'. This primitive combined with the 'ExecutionPrimitive' supersedes the earlier 'Inception' primitive, which had both the the execution and the contract formation bundled together, and as such was only applicable to contractual products. This intends to provide for properly atomic primitives.
|-
| AllocationPrimitive || Data Type || The primitive event to represent a split/allocation of a trade. As part of this primitive event the type of trade, either an execution or a contract, does not get altered. In the case of an execution, the further transformation of each split execution into a contract will be the purpose of the ContractFormation primitive.
|-
| ExercisePrimitive || Data Type || This primitive leverages the FpML OptionExercise construct, except for the exerciseTiming which is deemed as associated to a request for exercise that is meant to take place, as opposed to the actual exercise event.
|-
| InceptionPrimitive || Data Type || The primitive event for the inception of a new contract between parties. It is expected that this primitive will be adjusted or deprecated once the CDM scope is extended to the pre-execution space.
|-
| ObservationPrimitive || Data Type || A class to specify the primitive object to specify market observation events, which is applicable across all asset classes.
|-
| QuantityChangePrimitive || Data Type || The primitive event to represent a change in quantity or notional.
|-
| ResetPrimitive || Data Type || The primitive event to represent a reset.
|-
| TermsChangePrimitive || Data Type || The primitive event to represent change(s) to the contractual terms and the clearing submission and acceptance process.
|-
| TransferPrimitive || Data Type || A class to specify the transfer of assets between parties, those assets being either cash, securities or physical assets. This class combines components that are cross-assets (settlement date, settlement type, status, ...) and some other which are specialized by asset class (e.g. the payer/receiver amount and cashflow type for a cash transfer, the transferor/transferee, security indication, quantity, and asset transfer type qualification for the case of a security). The associated rosettaKey denotes the ability to associate a hash value to the respective Execution instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| AssetPool || Data Type || Characterizes the asset pool behind an asset backed bond.
|-
| Bond || Data Type || A class to specify a bond as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.
|-
| Commodity || Data Type || A class to specify a commodity asset.
|-
| ConvertibleBond || Data Type || A class to specify a convertible bond as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.
|-
| Equity || Data Type || A class to specify an equity as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.
|-
| ExchangeTradedFund || Data Type || A class to specify an ETF as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.
|-
| IdentifiedProduct || Data Type || An abstract class to specify a product which terms are abstracted through reference data.
|-
| Index || Data Type || A class to specify an index as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.
|-
| Loan || Data Type || 
|-
| MortgageBackedSecurity || Data Type || 
|-
| MutualFund || Data Type || A class to specify a mutual fund as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.
|-
| ProductIdentifier || Data Type || The product identifier, composed of an identifier, a source and a product taxonomy. The source is optional because it can be specified through the scheme that is associated with the identifier. As FpML doesn't specify a scheme as part of the standard, that scheme cannot be mapped to the CDM ProductIdSourceEnum. The associated rosettaKey denotes the ability to associate a hash value to the ProductIdentifier instantiations for the purpose of model cross-referencing, in support of functionality such as the event effect and the lineage.
|-
| ProductTaxonomy || Data Type || The product taxonomy, which is composed of a taxonomy value and a taxonomy source.
|-
| Security || Data Type || 
|-
| Warrant || Data Type || A class to specify a warrant as having a product identifier. As a difference versus the FpML standard, the CDM structure of this class only includes the productIdentifier class, which consists of an identifier, productTaxonomy, and source of the identifier. The reason for this approach is to avoid the potential for conflicting information between the information associated with the contractual product and the reference information maintained by the relevant service provider.
|-
| AdditionalRegime || Data Type || A class to specify the additional regulatory regime(s) that might be elected by the parties to a legal agreement where such provision exists, such as the ISDA 2016 and 2018 CSA for Initial Margin.
|-
| AdditionalRepresentation || Data Type || A class to specify the Additional Representation. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (o): Additional Representation(s).
|-
| AdditionalRepresentationElection || Data Type || A class to specify the parties' Additional Representation(s) election.
|-
| AdditionalRightsEvent || Data Type || A class to specify the Pledgor/Obligor/Chargor Additional Rights Event election. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (k): Chargor Additional Rights Event. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (k): Obligor Additional Rights Event. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (k): Pledgor Additional Rights Event.
|-
| AdditionalType || Data Type || The specification of the Additional Type of transaction that can require the collection or delivery of initial margin under a given regulatory regime for the purposes of Covered Transactions, as specified in ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (b)(B).
|-
| AmendmentEffectiveDate || Data Type || A class to specify the effective date of the Amendment to Termination Currency. This date can be specified as either an actual date, a specific date (e.g. the annex date) or as a custom provision.
|-
| ApplicableRegime || Data Type || A class to specify the applicable regulatory regime(s) that parties to a legal agreement, such as the ISDA 2016 and 2018 CSA for Initial Margin, might be subject to.
|-
| RegimeTerms || Data Type || A class that is used by the ApplicableRegime and the AdditionalRegime classes to specify the regulatory regime terms which are referred to as part of certain legal agreements, such as such as the ISDA 2016 and 2018 CSA for Initial Margin.
|-
| CalculationCurrencyElection || Data Type || A class to specify the SIMM Calculation Currency elections by each party to the agreement.
|-
| CalculationDateLocation || Data Type || A class to specify the Calculation Date Location election for the respective parties to the legal agreement. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (d)(i): Calculation Date Location. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (e)(i): Calculation Date Location. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(i): Calculation Date Location.
|-
| CalculationDateLocationElection || Data Type || A class to specify each of the party elections with respect to the Calculation Date Location. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (d)(i): Calculation Date Location. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (e)(i): Calculation Date Location. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(i): Calculation Date Location.
|-
| ChargorPostingObligations || Data Type || A class to specify the chargor(s) collateral posting obligations as specified under the terms of the English Law ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (ii).
|-
| CollateralManagementAgreement || Data Type || A class to specify the Collateral Management Agreement election by the respective parties to a Japanese Law ISDA CSA. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (b)(i): Collateral Management Agreement.
|-
| CollateralManagementAgreementElection || Data Type || A class to specify the Collateral Management Agreement election by each party as the Obligee. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (b(i): Collateral Management Agreement.
|-
| CollateralManagementArrangement || Data Type || A class to specify the Collateral Management Arrangement elections in accordance with the ISDA Japanese Law CSA. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (m): Collateral Management Arrangement.
|-
| CollateralManagementArrangementElection || Data Type || A class to specify the election to specify the Collateral Management Arrangement.
|-
| AppropriatedCollateralValuation || Data Type || A class to specify the Valuation of Appropriate Collateral that is applicable to the English Law ISDA CSA. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (u): Valuation of Appropriated Collateral.
|-
| CollateralManager || Data Type || A class to specify the Collateral Manager election by the respective parties to a Japanese Law ISDA CSA. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (b)(ii): Collateral Manager.
|-
| CollateralManagerElection || Data Type || A class to specify the Collateral Manager election by each party as the Obligee. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (b(ii): Collateral Manager.
|-
| CollateralRounding || Data Type || A class to specify the rounding methodology applicable to the Delivery Amount and the Return Amount in terms of nearest integral multiple of Base Currency units. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (c)(vi)(C): Rounding. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(vi)(C): Rounding. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (c)(vi)(C): Rounding.
|-
| Conditions || Data Type || A class to specify each party's election with respect to the Termination Events that will be deemed an Access Condition (Initial Margin CSA) or a Specified Condition (Variation Margin CSA). ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (e)(ii). | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (f)(ii). | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (e)(ii). | ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (e): Conditions Precedent and Secured Party’s Rights and Remedies.
|-
| ConditionsElections || Data Type || A class to specify the Termination Events that will be deemed an Access Condition (Initial Margin CSA) or a Specified Condition (Variation Margin CSA). ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (e)(ii). | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (f)(ii). | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (e)(ii). | ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (e): Conditions Precedent and Secured Party’s Rights and Remedies.
|-
| AdditionalTerminationEvent || Data Type || A class to specify an optional termination event, additional to the Termination Events that will be deemed an Access Condition (Initial Margin CSA) or a Specified Condition (Variation Margin CSA)
|-
| ConditionsPrecedent || Data Type || A class to specify the two set of elections that may overwrite the default Condition Precedent provision as specified in Paragraph 4, (a) of the ISDA 2016 Credit Support Annex for Initial Margin and the ISDA 2016 Credit Support Annex for Variation Margin. | ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (e): Conditions Precedent. | ISDA 2018 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (e): Conditions Precedent. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (f): Conditions Precedent. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (e): Conditions Precedent. | ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (e): Conditions Precedent and Secured Party’s Rights and Remedies.
|-
| ContactElection || Data Type || A class to specify the parties' election to specify contact information, in relation to elections such as the Addresses for Transfer or the Demand and Notices as specified in the ISDA Credit Support Annex agreement.
|-
| CreditNotation || Data Type || A class to specify the credit notation as the combination of agency, notation, scale and debt type qualifications.
|-
| CreditNotations || Data Type || The credit rating notation higher level construct, which provides the ability to specify multiple rating notations.
|-
| CreditRatingDebt || Data Type || The credit rating debt type(s) associated with the credit rating notation and scale. When several debt types are specified, they must be qualified through an 'any' or 'all'.
|-
| CreditSupportObligationsInitialMargin || Data Type || A class to specify the Credit Support Obligations applicable to the Initial Margin Credit Support Annex and which are common among the English, Japanese and New York governing laws. This excludes the Other Eligible Support election (which only applies to the Japanese Law and New York Law agreements) and the Transfer Timing election (which only applies to the English Law and the New York Law agreements). ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (c): Credit Support Obligations. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d): Credit Support Obligations. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (c): Credit Support Obligations.
|-
| CreditSupportObligationsVariationMargin || Data Type || A class to specify the Credit Support Obligations applicable to the Variation Margin Credit Support Annex and which are common among the English, Japanese and New York governing laws. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (c): Credit Support Obligations.
|-
| Csa || Data Type || An abstract class to specify the provisions for a ISDA Credit Support Annex that are common among vintages, governing laws and across IM and VM.
|-
| Csa2016 || Data Type || An abstract class to specify the provisions for the 2016 ISDA Credit Support Annex that are common among governing laws and across Initial and Variation Margin.
|-
| CsaInitialMargin2016 || Data Type || An abstract class to specify the provisions for the 2016 ISDA Credit Support Annex for Initial Margin that are common among governing laws.
|-
| CsaInitialMargin2016JapaneseLaw || Data Type || A class to specify the provisions that are specific to the Japanese Law version of the ISDA 2016 Credit Support Annex for Initial Margin.
|-
| CsaInitialMargin2016NewYorkLaw || Data Type || A class to specify the provisions that are specific to the New York Law version of the ISDA 2016 Credit Support Annex for Initial Margin.
|-
| CsdInitialMargin2016EnglishLaw || Data Type || A class to specify the provisions that are specific to the English Law version of the ISDA 2016 Credit Support Deed for Initial Margin.
|-
| Csa2018 || Data Type || An abstract class to specify the provisions for the 2018 ISDA Credit Support Annex that are common among governing laws and across Initial and Variation Margin.
|-
| CsaInitialMargin2018 || Data Type || An abstract class to specify the provisions for the 2018 ISDA Credit Support Annex for Initial Margin that are common among governing laws.
|-
| CsaVariationMargin2016 || Data Type || An abstract class to specify the provisions for the 2016 ISDA Credit Support Annex for Variation Margin that are common among governing laws.
|-
| CsaVariationMargin2016NewYorkLaw || Data Type || A class to specify the provisions that are specific to the New York Law version of the ISDA 2016 Credit Support Annex for Variation Margin.
|-
| CustodianEvent || Data Type || A class to specify the Custodian Event (English Law & New York Law ISDA CSA) and the Collateral Manager Event (Japanese Law ISDA CSA) in terms of applicability and end-date. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (n)(iii): Custodian Event. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (m)(ii): Collateral Manager Event. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(iii): Custodian Event.
|-
| CustodianEventEndDate || Data Type || A class to specify the Custodian Event (English Law & New York Law ISDA CSA) or Collateral Manager Event (Japanese Law ISDA CSA) End Date. Its qualification is function of three elective periods: either (i) a specified number of days after the occurrence of the Custodian Event (the daysAfterCustodianEvent attribute), or (ii) the number of days prior to the date on which the Control Agreement will terminate, with in this latter case (iii) the further qualification of the number of days prior to the Release Date if only one party has effectively provided the Timely Statement to the other party. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (n)(iii): CE End Date. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (m)(ii): CME End Date. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(iii): CE End Date.
|-
| CustodianRisk || Data Type || A class to specify the Custodian Risk (English Law and New York Law ISDA CSA) and the Collateral Manager Risk (Japanese Law ISDA CSA) election. | ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (n)(ii): Custodian (IM) Risk. | ISDA 2018 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (n)(ii): Custodian (IM) Risk. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (m)(i): Collateral Manager Risk. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(ii): Custodian (IM) Risk.
|-
| CustodianTerms || Data Type || A class to specify the requirements applicable to the custodian with respect to the holding of posted collateral. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (h)(i): Eligibility to Hold Posted Collateral (VM) Custodians (VM).
|-
| CustomisableOffset || Data Type || A class to specify an offset either as a normalized [multiplier, period, dayType] or as a custom provision of type string.
|-
| CustodyArrangements || Data Type || A class to specify the Custody Arrangements for the English Law and New York Law ISDA Credit Support Annex. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n): Custody Arrangements.
|-
| CustodyArrangementsElection || Data Type || A class to specify the Custody Arrangements election by each party to the agreement: custody agent and account(s) identification, as well as custodian risk qualification.
|-
| DeliveryAmount || Data Type || A class to specify the application of Interest Amount with respect the Delivery Amount. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(ii).
|-
| DisputeResolution || Data Type || A class to specify the election terms under which a party disputes (i) the Calculation Agent’s calculation of a Delivery Amount or a Return Amount, or (ii) the Value of any Transfer of Eligible Credit Support or Posted Credit Support. Parties can specify such election either through a business center time or through a custom election. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (g): Dispute Resolution. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (h): Dispute Resolution. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (g): Dispute Resolution.
|-
| DistributionAndInterestPayment || Data Type || A class to specify the Distributions and Interest Payment provisions applicable to the Japanese Law ISDA 2016 CSA for Initial Margin and the New York Law ISDA 2016 CSA for Variation Margin. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n): Distributions and Interest Payment (IM). | ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (i): Distributions and Interest Payment (VM).
|-
| ElectiveAmountElection || Data Type || A class to specify the party elective amounts which can be used for the purpose of specifying elections such as the ISDA CSA Threshold and Minimum Transfer Amount.
|-
| EligibilityToHoldCollateral || Data Type || A class to specify the conditions under which a party and its custodian(s) are entitled to hold collateral. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (h)(i): Eligibility to Hold Posted Collateral (VM) Custodians (VM).
|-
| EligibleCollateralVariationMarginElection || Data Type || A class to specify the parties' elections with respect to the eligible collateral for each of the respective parties when acting as a pledgor/chargor/obligor. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (c)(ii): Eligible Collateral (VM).
|-
| EligibleCollateralVariationMargin || Data Type || A class to specify the eligible collateral elections by the respective parties to the Credit Support Annex for Variation Margin. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (c)(ii): Eligible Collateral (VM).
|-
| EligibleCurrencyInterestRate || Data Type || A class to specify the interest rate associated with initial margin collateral. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n): Distributions and Interest Payment (IM).
|-
| FxHaircutCurrency || Data Type || A class to specify the reference currency for the purpose of specifying the FX Haircut relating to a posting obligation, as being either the Termination Currency or an FX Designated Currency.
|-
| HoldingAndUsingPostedCollateral || Data Type || A class to specify the elections for the holding and using of posted collateral by the respective parties to the Credit Support Annex for Variation Margin. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (h): Holding and Using Posted Collateral (VM).
|-
| HoldingAndUsingPostedCollateralElection || Data Type || A class to specify the parties' elections related to the holding and using of posted collateral. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (h): Holding and Using Posted Collateral (VM).
|-
| IneligibleCreditSupport || Data Type || A class to specify the parties to which the provisions of Paragraph 11(g) of the ISDA 2016 Credit Support Annex for Variation Margin will apply to. ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (c)(iii): Legally Ineligible Credit Support (VM).
|-
| InterestAdjustment || Data Type || A class to specify whether the Interest Adjustment is applicable and what its periodicity is. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(ii).
|-
| InterestAdjustmentPeriodicity || Data Type || A class to specify the Interest Adjustment periodicity either through a standardized election or a custom one. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(ii).
|-
| InterestAmount || Data Type || A class to specify the application of Interest Amount with respect to the Delivery Amount and the Return Amount. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(ii).
|-
| EquitySwapMasterConfirmation2018 || Data Type || Specification for the General Terms and Relationship Supplement Elections as provided in the 2018 ISDA CDM Equity Confirmation for Security Equity Swap.
|-
| EquityMasterConfirmation || Data Type || Specification for General Terms and Elections of an Equity Master Confirmation that is applicable across multiple Equity confirmations and is referenced by each of these confirmations, an example of which being the 2018 ISDA CDM Equity Confirmation for Security Equity Swap.
|-
| MasterConfirmationBase || Data Type || Legal agreement specification for General Terms and Elections that are applicable across multiple confirmations and are referenced by these confirmations.
|-
| LegalAgreementBase || Data Type || A class describing the legal agreement baseline information, other than the specialized elections: type of legal agreement, agreement date and effective date, parties to the agreement, ... The purpose of this abstract class is to provide the ability to associate a 'one of' feature to the LegalAgreement class as a way to enforce a systematic choice between its attributes.
|-
| LegalAgreementType || Data Type || A class to specify the type of legal agreement, which is extended by each legal agreement instance, such as the ISDA 2016 CSA for Initial Margin.
|-
| Method || Data Type || A class to specify the ISDA SIMM as the Method for all Covered Transactions with respect to all Regimes. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (ee).
|-
| MinimumTransferAmount || Data Type || A class to specify amount of exposure reached before collateral has to be posted or returned. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (c)(vi)(B): Minimum Transfer Amount. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(vi)(B): Minimum Transfer Amount. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (c)(vi)(B): Minimum Transfer Amount.
|-
| MultipleCreditNotations || Data Type || A class to specify multiple credit notations alongside a conditional 'any' or 'all' qualifier.
|-
| MultipleDebtTypes || Data Type || A class to specify multiple credit debt types alongside a conditional 'any' or 'all' qualifier.
|-
| NotificationTime || Data Type || A class to specify the time by which a demand for the Transfer of Eligible Credit Support (IM) or Posted Credit Support (IM) needs to be made in order for the transfer to take place in accordance with the Transfer Timing provisions. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (d)(iii): Notification Time. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (e)(iii): Notification Time. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(iii): Notification Time.
|-
| NotificationTimeElection || Data Type || A class to specify the notification time election by the respective parties to the agreement. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (d)(iii): Notification Time. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (e)(iii): Notification Time. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(iii): Notification Time.
|-
| ObligorPostingObligations || Data Type || A class to specify the obligor(s) collateral posting obligations in accordance with the terms of the Japanese Law ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (ii).
|-
| OneWayProvisions || Data Type || A class to specify whether One Way Provisions apply in relation to the ISDA CSA for Initial Margin and, if yes, to specify the Posting Party. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles (aa): One Way Provisions.
|-
| OtherEligibleAndPostedSupport || Data Type || A class to specify the Other Eligible Support elections associated with Japanese and New York Law Initial and Variation margin agreements. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (p): Other Eligible Support (IM) and Other Posted Support (IM). | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (p): Other Eligible Support (IM) and Other Posted Support (IM). | ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (l): Other Eligible Support (VM) and Other Posted Support (VM).
|-
| PartyAgreementIdentifier || Data Type || A class defining a legal agreement identifier issued by the indicated party.
|-
| TerminationAmendmentCurrency || Data Type || A class to specify the Termination Amendment Currency election by the respective parties to the agreement.
|-
| PledgorPostingObligations || Data Type || A class to specify the pledgor(s) collateral posting obligations as specified under the terms of the New York Law ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (ii).
|-
| PostingObligationsElection || Data Type || A class to specify the collateral posting obligations as specified under the terms of the ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (ii).
|-
| ProcessAgent || Data Type || A class to specify the Process Agent that might be appointed by the parties to the agreement in accordance with the ISDA 2016 English Law CSA, paragraph 11(h). ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (t): Process Agent.
|-
| ProcessAgentElection || Data Type || A class to specify the parties' respective elections with respect to the Process Agent as part of the English Law ISDA CSA.
|-
| Regime || Data Type || A class to specify the regulatory regimes elections by the respective parties a legal agreement. 2016 ISDA Credit Support Annex for Initial Margin: Regime.
|-
| RegimeElection || Data Type || A class to specify the parties' respective elections with respect to the applicable regulatory regime(s) in their capacity as Secured Party (English Law & New York Law) or Obligee (Japanese Law).
|-
| OtherAgreements || Data Type || A class to specify a related legal agreement. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (s): Other CSA and Japanese Law CSA (VM). | ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (o): Other CSA.
|-
| ReturnAmount || Data Type || A class to specify the application of Interest Amount with respect the Return Amount. ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (n)(ii).
|-
| RightsEvent || Data Type || A class to specify the Pledgor/Obligor/Chargor Rights Event election. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (j): Chargor Rights Event. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (j): Obligor Rights Event. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (j): Pledgor Rights Event.
|-
| SensitivityMethodology || Data Type || A class to specify the methodology according to which sensitivities to (i) equity indices, funds and ETFs, and (ii) commodity indices are computed. This specification is done either through a normalized election as part of the specifiedMethodology, or through a custom election via the customMethodology attribute. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (gg)(2).
|-
| SimmCalculationCurrency || Data Type || A class to specify the ISDA SIMM Calculation Currency as either the Base Currency or an alternative currency. ISDA 2016 CSA for Initial Margin, Paragraph 13, General Principles (ee)(3). | ISDA 2018 CSA for Initial Margin, Paragraph 13, General Principles (ee)(3).
|-
| SimmException || Data Type || A class to specify the SIMM exception to the regulatory regime clause of the ISDA 2016 and 2018 CSA for Initial Margin as either a normalized value specified as part of an enumeration or a customized value specified of type string. ISDA 2016 Credit Support Annex for Initial Margin paragraph 13, Regime: SIMM Exception.
|-
| SimmVersion || Data Type || A class to specify the ISDA SIMM version that applies to the ISDA 2018 CSA for Initial Margin. According to the ISDA 2018 CSA for Initial Margin, Paragraph 13, General Principles (ee) (1) provisions, the SIMM version is either not specified, or references a version used by one of the parties to the agreement.
|-
| Substitution || Data Type || A class to specify the conditions under which the Pledgor can substitute posted collateral. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (f): Substitution. | ISDA 2016 Credit Support Annex for Variation Margin, paragraph 13, (f): Substitutions.
|-
| TerminationCurrencyAmendment || Data Type || A class to specify the Amendment to Termination Currency elections by the parties to the agreement. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (t): Amendment to Termination Currency.
|-
| TerminationCurrencyElection || Data Type || A class to specify the Amendment to Termination Currency election by the parties to the agreement. ISDA 2016 Credit Support Annex for Initial Margin, paragraph 13, General Principles, (t) (A) & (B).
|-
| Threshold || Data Type || A class to specify the unsecured credit exposure that each party to the agreement is prepared to accept before asking for collateral. This threshold is specified either as an amount or as a custom election. ISDA 2016 English Law Credit Support Deed for Initial Margin, paragraph 13, General Principles, (c)(vi)(A): Threshold. | ISDA 2016 Japanese Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (d)(vi)(A): Threshold. | ISDA 2016 New York Law Credit Support Annex for Initial Margin, paragraph 13, General Principles, (c)(vi)(A): Threshold.
|-
| UmbrellaAgreement || Data Type || A class to specify a set of legal entities which are part of a legal agreement beyond the two contracting parties to that agreement. This data representation reflects the ISDA Create representation.
|-
| UmbrellaAgreementEntity || Data Type || A class to specify the legal entities that are part of the umbrella agreement.
|-
| CsdInitialMargin2018EnglishLaw || Data Type || A class to specify the provisions that are specific to the English Law version of the ISDA 2018 Credit Support Deed for Initial Margin.
|-
| CsaInitialMargin2018NewYorkLaw || Data Type || A class to specify the provisions that are specific to the English Law version of the ISDA 2018 Credit Support Deed for Initial Margin.
|-
| FallbackToMandatoryMethodDays || Data Type || Description to be added
|-
| SubstitutedRegime || Data Type || A class to specify each party's election with respect to the Substituted Regimes that will be applicable...
|-
| SubstitutedRegimes || Data Type || A class to specify the Substituted Regimes that will be deemed applicable...
|-
| MarginApproach || Data Type || A class for selection of Margin Approach.
|-
| CalculationAgentIm || Data Type || A class to select Calculation Agent for purposes of IM
|-
| CalculationDateIm || Data Type || A class to specify additional Calculation Date terms for the purposes of Initial Margin
|-
| CalculationTimeIm || Data Type || A class to specify additional Calculation Time terms for the purposes of Initial Margin
|-
| RecalculationOfValue || Data Type || A class to specify dispute resolution terms for Recalculation of Value
|-
| RecalculationOfValueElection || Data Type || A class to specify Recalculation of Value terms that will be applicable
|-
| SecuredPartyRightsEvent || Data Type || A class to specify Secured Party Rights Event language
|-
| SecuredPartyRightsEventElection || Data Type || A class to specify party specific Secured Party Rights Event language
|-
| ControlAgreementNecEvent || Data Type || A class to specify Control Agreement language related to delivery of a Notice of Exclusive Control
|-
| ControlAgreementNecEventElection || Data Type || A class to specify party specific Control Agreement language related to delivery of a Notice of Exclusive Control
|-
| RightsEventElection || Data Type || A class to specify party specific Secured Party Rights Event language.
|-
| CollateralAccessBreach || Data Type || A class to specify Collateral Access Breach language
|-
| MinimumTransferAmountAmendment || Data Type || A class to specify whether Minimum Transfer Amount language is applicable or not
|-
| JapaneseSecuritiesProvisions || Data Type || A class to specify Japanese Securities Provision elections.
|-
| LegalAgreement || Data Type || A class to specify the elections and variables that characterize a legal agreement.
|-
| AgreementTerms || Data Type || A class to specify the elections and variables that characterize a legal agreement.
|-
| Agreement || Data Type || A class to specify elections specific to a certain type of agreement.
|-
| CreditSupportAgreementElections || Data Type || The set of elections which specify a Credit Support Agremeent
|-
| CollateralTransferAgreementElections || Data Type || The set of elections which specify a Collateral Transfer Agremeent
|-
| SecurityAgreementElections || Data Type || The set of elections which specify a Security Agremeent
|-
| TransactionConfirmation || Data Type || See existing Contract type
|-
| GeneralPrinciples || Data Type || A class to specify the set of general principles that maybe specific to a legal agreement.
|-
| EnforcementEvent || Data Type || A class to specify Enforcement Events specific to Security Agreements
|-
| JurisdictionSpecificTerms || Data Type || A class to specify Jurisdiction Specfic Terms
|-
| ExecutionTerms || Data Type || A class to specify execution location and language of execution to determine duty to be paid.
|-
| ExecutionLanguage || Data Type || A class to specify execution language terms of a Security Agreement.
|-
| ExecutionLocation || Data Type || A class to specify execution location terms of a Security Agreement
|-
| CollateralValuationAgent || Data Type || A class to specify Collateral Valuation Agent terms.
|-
| CollateralValuationAgentElection || Data Type || A class to specify Collateral Valuation Agent elections.
|-
| ForwardFX || Function || 
|-
| EffectiveDateContainsPaymentDate || Function || 
|-
| NovatedContractEffectiveDate || Function || 
|-
| PaymentDate || Function || 
|-
| QuantityChange || Function || The alias to represent the quantity or notional amount in terms of number of units (i.e. ignoring the currency or units denomination) before a quantity change primitive.
|-
| QuantityIncreased || Function || 
|-
| QuantityDecreased || Function || 
|-
| QuantityDecreasedToZero || Function || 
|-
| NoQuantityChange || Function || 
|-
| TerminationDate || Function || 
|-
| DeliveryMethodEnum || Enumeration || Specifies delivery methods for securities transactions. This coding-scheme defines the possible delivery methods for securities.
|-
| AveragingInOutEnum || Enumeration || The enumerated values to specify the type of averaging used in an Asian option.
|-
| BrokerConfirmationTypeEnum || Enumeration || The enumerated values to specify the type of Broker Confirm that the FpML trade represents.
|-
| CalculationAgentPartyEnum || Enumeration || The enumerated values to specify how a calculation agent will be determined.
|-
| CategoryEnum || Enumeration || The enumerated values to specify the type of organisation involved in the transaction.
|-
| CompoundingMethodEnum || Enumeration || The enumerated values to specify the type of compounding, e.g. flat, straight.
|-
| ContractualDefinitionsEnum || Enumeration || The enumerated values to specify a set of standard contract definitions relevant to the transaction.
|-
| ContractualSupplementEnum || Enumeration || The enumerated values to define the supplements to a base set of ISDA Definitions that are applicable to the transaction.
|-
| CreditSupportAgreementTypeEnum || Enumeration || The enumerated values to specify the type of ISDA Credit Support Agreement governing the transaction.
|-
| DayCountFractionEnum || Enumeration || The enumerated values to specify the day count fraction.
|-
| DeterminationMethodEnum || Enumeration || The enumerated values to specify the method according to which an amount or a date is determined.
|-
| DiscountingTypeEnum || Enumeration || The enumerated values to specify the method of calculating discounted payment amounts. This enumerations combines the FpML DiscountingTypeEnum and FraDiscountingEnum enumerations.
|-
| DividendAmountTypeEnum || Enumeration || The enumerated values to specify whether the dividend is paid with respect to the Dividend Period.
|-
| DividendDateReferenceEnum || Enumeration || The enumerated values to specify the date by reference to which the dividend will be paid.
|-
| DividendEntitlementEnum || Enumeration || The enumerated values to specify the date on which the receiver of the equity payout is entitled to the dividend.
|-
| DividendPeriodEnum || Enumeration || 2002 ISDA Equity Derivatives Definitions: First Period, Second Period |
|-
| ExecutionTypeEnum || Enumeration || The enumerated values to specify how a contract has been executed, e.g. electronically, verbally, ...
|-
| GoverningLawEnum || Enumeration || The enumerated values to specify the law governing the contract or legal document.
|-
| IndexAnnexSourceEnum || Enumeration || The enumerated values to specify the CDX index annex source.
|-
| IndexEventConsequenceEnum || Enumeration || The enumerated values to specify the consequences of Index Events.
|-
| InformationProviderEnum || Enumeration || The enumerated values to specify the list of information providers.
|-
| InterestShortfallCapEnum || Enumeration || The enumerated values to specify the interest shortfall cap, applicable to mortgage derivatives.
|-
| InterpolationMethodEnum || Enumeration || The enumerated values to specify the interpolation method, e.g. linear.
|-
| LengthUnitEnum || Enumeration || The enumerated values to specify the length unit in the Resource type.
|-
| MarketDisruptionEnum || Enumeration || The enumerated values to specify the handling of an averaging date market disruption for an equity derivative transaction.
|-
| MasterAgreementTypeEnum || Enumeration || The enumerated values to specify the type of the master agreement governing the transaction.
|-
| MasterConfirmationAnnexTypeEnum || Enumeration || The enumerated values to specify the type of annex to be used with master confirmation agreement governing the transaction.
|-
| MasterConfirmationTypeEnum || Enumeration || The enumerated values to specify the type of master confirmation agreement governing the transaction. While FpML positions the date a prefix, the CDM positions it as the suffix to handle grammar type constraints.
|-
| MatrixTermEnum || Enumeration || The enumerated values to specify a scheme of transaction types specified in the Equity Derivatives Settlement Matrix.
|-
| MatrixTypeEnum || Enumeration || The enumerated values to specify the identification the form of applicable matrix.
|-
| NationalizationOrInsolvencyOrDelistingEventEnum || Enumeration || Defines the consequences of nationalization, insolvency and delisting events relating to the underlying.
|-
| NegativeInterestRateTreatmentEnum || Enumeration || The enumerated values to specify the method of calculating payment obligations when a floating rate is negative (either due to a quoted negative floating rate or by operation of a spread that is subtracted from the floating rate).
|-
| NotionalAdjustmentEnum || Enumeration || The enumerated values to specify the conditions that govern the adjustment to the number of units of the return swap.
|-
| OptionTypeEnum || Enumeration || The enumerated values to specify the type of the option. In FpML, OptionTypeEnum is a union with PutCallEnum, which specifies whether the option is a put or a call.
|-
| PayRelativeToEnum || Enumeration || The enumerated values to specify whether payments occur relative to the calculation period start date or end date, each reset date, valuation date or the last pricing date.
|-
| PremiumTypeEnum || Enumeration || The enumerated values to specify the premium type for forward start options.
|-
| PriceExpressionEnum || Enumeration || he enumerated values to specify whether the price is expressed in absolute or relative terms.
|-
| QuotationRateTypeEnum || Enumeration || The enumerated values to specify the type of quotation rate to be obtained from each cash settlement reference bank.
|-
| QuotationSideEnum || Enumeration || The enumerated values to specify the side from which perspective a value is quoted.
|-
| QuotationStyleEnum || Enumeration || The enumerated values to specify the actual quotation style (e.g. PointsUpFront, TradedSpread) used to quote a credit default swap fee leg.
|-
| QuoteBasisEnum || Enumeration || The enumerated values to specify how an exchange rate is quoted.
|-
| RateTreatmentEnum || Enumeration || The enumerated values to specify the methods for converting rates from one basis to another.
|-
| ResetRelativeToEnum || Enumeration || The enumerated values to specify whether resets occur relative to the first or last day of a calculation period.
|-
| ResourceTypeEnum || Enumeration || The enumerated values to specify the type of a resource (e.g. document).
|-
| RestructuringEnum || Enumeration || The enumerated values to specify the form of the restructuring credit event that is applicable to the credit default swap.
|-
| ReturnTypeEnum || Enumeration || The enumerated values to specify the type of return associated the equity payout.
|-
| RollConventionEnum || Enumeration || The enumerated values to specify the period term as part of a periodic schedule, i.e. the calculation period end date within the regular part of the calculation period. The value could be a rule, e.g. IMM Settlement Dates, which is the 3rd Wednesday of the month, or it could be a specific day of the month, such as the first day of the applicable month.
|-
| SettledEntityMatrixSourceEnum || Enumeration || The enumerated values to specify the relevant settled entity matrix source.
|-
| SettlementRateOptionEnum || Enumeration || The enumerated values to specify the settlement rate options as specified in the Annex A to the 1998 FX and Currency Options Definitions.
|-
| ShareExtraordinaryEventEnum || Enumeration || The enumerated values to specify the consequences of extraordinary events relating to the underlying.
|-
| SpreadScheduleTypeEnum || Enumeration || The enumerated values to specify a long or short spread value.
|-
| StandardSettlementStyleEnum || Enumeration || The enumerated values to specify whether a trade is settling using standard settlement instructions as well as whether it is a candidate for settlement netting.
|-
| StubPeriodTypeEnum || Enumeration || The enumerated values to specify how to deal with a non standard calculation period within a swap stream.
|-
| TriggerTypeEnum || Enumeration || The enumerated values to specify whether an option will trigger or expire depending upon whether the spot rate is above or below the barrier rate.
|-
| TimeTypeEnum || Enumeration || The enumerated values to specify points in the day when option exercise and valuation can occur.
|-
| TriggerTimeTypeEnum || Enumeration || The enumerated values to specify the time of day which would be considered for valuing the knock event.
|-
| ValuationMethodEnum || Enumeration || The enumerated values to specify the ISDA defined methodology for determining the final price of the reference obligation for purposes of cash settlement.
|-
| WeeklyRollConventionEnum || Enumeration || The enumerated values to specify the weekly roll day.
|-
| PriceQuantityTriangulation || Function || 
|-
| CashPriceQuantityNoOfUnitsTriangulation || Function || Data rule to check the relationship between cash price, notional and number of units.
|-
| ExchangeRateQuantityTriangulation || Function || 
|-
| NoOfUnits || Function || Get quantity associated with product identifier.
|-
| CurrencyAmount || Function || Get quantity associated with currency.
|-
| ResolveContractualProduct || Function || For a given ContractualProduct, the function finds all ResolvablePayoutQuantity instances, then for each instance, resolves the quantity, populates the quantity attribute on ResolvablePayoutQuantity, and finally returns the updated ContractualProduct.
|-
| ResolvePayoutQuantity || Function || For a given ResolvablePayoutQuantity, the function resolves and returns the corresponding quantity from the QuantityNotations by matching on AssetIdentifier.
|-
| ResolveQuantity || Function || Function specification to resolve a payout quantity, specified as a resolvable quantity with inputs for the resolution, into a basic quantity with just a number and a unit.
|-
| ResolvePrice || Function || Function specification to return the price on a valuation date based on an EquityValuation method. Implementor of this function should make use of the observation primitive and fetch the price based on an observation key.
|-
| ExtractContractState || Function || Extracts a single Contract State, given an Event. This function navigates all the possible paths to product and extracts a single value.
|-
| Plus || Function || 
|-
| Equals || Function || 
|-
| GreaterThan || Function || 
|-
| GreaterThanEquals || Function || 
|-
| ExtractQuantityByAsset || Function || 
|-
| ExtractQuantityByCurrency || Function || 
|-
| AllocationInstruction || Data Type || 
|-
| AllocationBreakdown || Data Type || 
|-
| AllocationOutcome || Data Type || A class to specify the allocated outcome as the combination of the previous Trade, which is either an execution or a contract and which state is specified as 'Allocated', and a set of Trade(s) of the same execution or contract type as before allocation. The allocation to one single trade is deemed appropriate: e.g. the trade could be effectively allocated from the fund manager doing the execution to a single fund entity.
|-
| CashTransferBreakdown || Data Type || 
|-
| CashTransferComponent || Data Type || 
|-
| CommodityTransferBreakdown || Data Type || 
|-
| CommodityTransferComponent || Data Type || 
|-
| ComputedAmount || Data Type || A class to specify the outcome of a computed amount, for testing purposes.
|-
| ContractState || Data Type || A class to specify a contract state instantiation with respect to the before and/or after state of lifecycle events.
|-
| CreditLimitInformation || Data Type || A class to represent the credit limit utilisation information.
|-
| CreditLimitUtilisation || Data Type || Credit limit utilisation breakdown by executed trades and pending orders.
|-
| CreditLimitUtilisationPosition || Data Type || 
|-
| Curve || Data Type || 
|-
| CustomisedWorkflow || Data Type || In its initial iteration, this class is meant to support the DTCC TIW workflow information.
|-
| Instruction || Data Type || Instruction to a function that will be used to perform a business event
|-
| WorkflowStep || Data Type || A workflow step represents the state of a business event. The workflow step contains a reference to a previous WorkflowStep in order to preserve lineage. A workflow step is accepted if it contains a business event, proposed if proposedInstruction is present and is rejected if the rejected flag is set.
|-
| Workflow || Data Type || A collection of workflow steps which together makeup an entire workflow sequence.
|-
| BusinessEvent || Data Type || A business event represents a life cycle event of a trade and consists of a series of primitive events. The combination of the state changes results in a qualifiable life cycle event. An example of a Business Event is a PartialTermination which is a defined by a quantity change primitive event.
|-
| EventEffect || Data Type || The set of operational and positional effects associated with a lifecycle event, alongside the reference to the contract reference(s) that is subject to the event (and is positioned in the before state of the event primitive).
|-
| EventTestBundle || Data Type || A class which combines several events for testing purposes.
|-
| EventTimestamp || Data Type || A class to represent the various set of timestamps that can be associated with lifecycle events, as a collection of [dateTime, qualifier].
|-
| WorkflowStepState || Data Type || A class to specify workflow information, which is conceptually applicable to all lifecycle events.
|-
| CashExercise || Data Type || The cash exercise specifies the cashflow using the cashflow payout and a given quantity.
|-
| ExerciseOutcome || Data Type || The exercise outcome combines the option contract (which states would be 'Exercised' in case of a full exercise and which would have a reduced notional in case of partial exercise) and either a physical or partial exercise.
|-
| ExecutionState || Data Type || A class to specify an execution instantiation with respect to the before and/or after state of lifecycle events.
|-
| InterestRateCurve || Data Type || 
|-
| LimitApplicable || Data Type || 
|-
| LimitApplicableExtended || Data Type || A class to represent the CDM attributes that are not part of the FpML standard. Once broader usage is confirmed, it is expected that those two classes can be collapsed.
|-
| Lineage || Data Type || A class to provide lineage information across lifecycle events through a pointer or set of pointers into the event(s), contract(s) and, possibly, payout components that the event is dependent on or relates to. As an example, if an inception event is corrected, the correction event will have a lineage into the initial event, which takes the form of a rosettaKey into that initial inception event. Two referencing mechanisms are provided as part of the CDM: either the rosettaKey, which corresponds to the hash value of the CDM class which is referred to, or a reference qualifier which is meant to provide support for the ingestion of xml documents with id/href mechanisms. The CDM recommends the use of the rosettaKey and provides a default implementation which is accessible in the generated code through org.isda.cdm.rosettakey.RosettaKeyValueHashFunction. If implementers want to use an alternative hashing mechanism, the API in which they need to plug it is com.rosetta.model.lib.HashFunction.
|-
| MessageInformation || Data Type || This class corresponds to the components of the FpML MessageHeader.model.
|-
| ObservationSource || Data Type || The observation source can be composed of an curve and/or and information source.
|-
| PartyCustomisedWorkflow || Data Type || A class to specify a party-related, non-standardized data in a generic form.
|-
| PhysicalExercise || Data Type || The physical exercise results into a financial product which is represented through the Product class, with an associated quantity and cashflow (e.g. a physical exercise of a bond option will result into a bond with a cash proceed which will be a function of the option strike price).
|-
| PostInceptionState || Data Type || 
|-
| SecurityTransferBreakdown || Data Type || 
|-
| SecurityTransferComponent || Data Type || 
|-
| StockSplitInstruction || Data Type || Data required to perform a stock split business event.
|-
| Trade || Data Type || A class to represent the general trade concept, which can either be an execution or a contract. The execution consists essentially in the economic terms which are agreed between the parties. The contract will further qualify those with the legal entities (think of the allocation case, which execution state can involve the investment adviser rather not the actual funds) while not specify the master agreement or collateral terms which might be associated with the subsequent contract.
|-
| TradeWarehouseWorkflow || Data Type || A class to specify trade warehouse workflow information: the identity of the trade warehouse, the contract status at the warehouse and party-specific workflow information.
|-
| TransferBase || Data Type || 
|-
| TransferCalculation || Data Type || 
|-
| TransferBreakdown || Data Type || 
|-
| TransferorTransferee || Data Type || A class mimicking the PayerReceiver, which is itself derived from the FpML PayerReceiver.model, to represent the transferee and transferor party information in relation to the transfer of security or commodities.
|-
| Velocity || Data Type || 
|-
| Allocation || Function || The qualification of allocation event from the fact that (i) the intent is Allocation when specified, (ii) the only primitive is the allocation, (iii) the sum of quantities/notional before = after, and (iv) there is a single contractualProduct before (ensured through cardinality). Note: it is accepted that an allocation can result in a single contract.
|-
| CashflowCalculationNotification || Function || 
|-
| CashTransfer || Function || The qualification of a cash transfer from the fact that the only component is a cashTransfer.
|-
| CashAndSecurityTransfer || Function || The qualification of a security settlement from the fact that (i) it is composed of a cashTransfer component and a securityTransfer component, and (ii) the cash and security move in the same direction.
|-
| ClearedTrade || Function || 
|-
| ClearingRejection || Function || The rejection of an alpha trade submission by a CCP, which is qualified by the fact that (i) termsChange is the only primitive, the workflow status is `rejected`, and (iii) the CCP is positioned as a partyRole to the execution or contract in the after state, while it didn't exist in the before state.
|-
| ClearingSubmission || Function || The submission of a contract to a CCP, which is qualified by the fact that (i) the termsChange is the only primitive, and (ii) the CCP is positioned as a partyRole to the execution or contract in the after state, while it didn't exist in the before state.
|-
| Compression || Function || The qualification of a compression event from the fact that (i) the quantityChange primitive exists, and (ii) there are multiple contracts (or contract references) specified in the before state.
|-
| DerivedObservation || Function || The qualification of a derived observation event from the fact that (i) the only primitive is the observation, (ii) there are multiple instances of such observations, and (iii) there is an associated call function to compute, say, an interpolation.
|-
| Exercise || Function || The qualification of an exercise event from the fact that (i) the only primitive is the exercise, and (ii) the remaining quantity = 0, and (iv) the closedState of the contract is Terminated.
|-
| Increase || Function || The qualification of a increase event from the fact that (i) the intent is Increase when specified, (ii) the associated primitives are the quantityChange and the cash transfer, the (iii) the quantity associated with the contract increases.
|-
| MultipleTransfers || Function || The qualification an event that combines multiple transfers from the fact that multiple transfer primitives exist.
|-
| NewTrade || Function || 
|-
| Novation || Function || The qualification of a novation event from the fact that (i) the intent is Novation when specified, (ii) the primitives quantityChange and inception exist, (iii) the remaining quantity = 0, (iv) the closedState of the contract is Novated, (v) the stepped-in contract has a different contract identifier than the novated contract, (vi) the stepped-in contract has the novation event date and the novation event effective date, and (vii) the contract counterparties have changed.
|-
| Observation || Function || The qualification of an observation event from the fact that (i) the only primitive is the observation, and (ii) that there is only a single instance of such observation.
|-
| PartialNovation || Function || The qualification of a novation event from the fact that (i) the intent is Novation when specified, (ii) the primitives quantityChange and inception exist, (iii) the contract quantity/notional has decreased as part of the quantityChange primitive, while (iv) there is a remaining quantity/notional, (v) the stepped-in contract has a different contract identifier than the original contract, (vi) the stepped-in contract has the novation event date and the novation event effective date, and (vii) the contract counterparties have changed.
|-
| PartialTermination || Function || The qualification of a partial termination event from the fact that (i) the intent is Partial Termination when specified, (ii) the associated primitives are the quantityChange and the cash transfer, the (iii) the quantity associated with the contract decreases, and (iv) there is an actual remaining quantity.
|-
| IsReset || Function || The qualification of a reset event from the fact that the only primitive is the reset.
|-
| SecurityTransfer || Function || The qualification of a security transfer from the fact that the only component is a securityTransfer.
|-
| SecuritySettlement || Function || The qualification of a security settlement from the fact that (i) it is composed of a cashTransfer component and a securityTransfer component, and (ii) the cash and security move in opposite directions.
|-
| Termination || Function || The qualification of a termination event from the fact that (i) the intent is Termination when specified, (ii) the only primitive is the quantityChange and there is only one such primitive involved, the (iii) the remaining quantity is null, and (iv) the closedState of the contract is Terminated.
|-
| TradeWarehousePositionNotification || Function || 
|-
| Execution || Function || The qualification of an execution event from the fact that the only component is an execution.
|-
| ContractFormationEvent || Function || The qualification of a contractFormation event from the fact that the only component is a contractFormation.
|-
| StockSplitEvent || Function || The qualification of StockSplit business event based on (i) an unchanged before/after currency amount (ii) the same adjustment ratio applied to the before/after cash price and number of units.
|-
| AdditionalDisruptionEvents || Data Type || A type for defining the Additional Disruption Events.
|-
| DeterminationMethod || Data Type || The purpose of this class is to be extended by the Price and EquityValuation classes.
|-
| DividendCurrency || Data Type || A class to specify the currency in which the dividends will be denominated, i.e. either in the dividend currency or in a currency specified as part of the contract.
|-
| DividendDateReference || Data Type || A class to specify the dividend date by reference to another date, with the ability to apply and offset. This class doesn't exist in FpML and is meant to simplify the choice constraint associated with the DividendPaymentDate class.
|-
| DividendPaymentDate || Data Type || A class describing the date on which the dividend will be paid/received. This class is also used to specify the date on which the FX rate will be determined, when applicable.
|-
| DividendReturnTerms || Data Type || A class describing the conditions governing the payment of dividends to the receiver of the equity return, with the exception of the dividend payout ratio, which is defined for each of the underlying components.
|-
| EquityCorporateEvents || Data Type || A class for defining the merger events and their treatment.
|-
| EquityValuation || Data Type || A class for defining how and when an equity option or equity swap is to be valued.
|-
| ExtraordinaryEvents || Data Type || Where the underlying is shares, defines market events affecting the issuer of those shares that may require the terms of the transaction to be adjusted.
|-
| IndexAdjustmentEvents || Data Type || Defines the specification of the consequences of Index Events as defined by the 2002 ISDA Equity Derivatives Definitions.
|-
| CashPrice || Data Type || Describes a price component as a cash amount, which can either represent cash proceeds for a security purchase or a cashflow that is embedded as part of a contractual product: for instance an upfront fee.
|-
| PriceReturnTerms || Data Type || 
|-
| Representations || Data Type || 
|-
| ForwardPayout || Data Type || Representation of a forward settling payout. The 'Underlier' attribute captures the underlying payout, which is settled according to the 'SettlementTerms' attribute. Both FX Spot and FX Forward should use this componen, while distinction between the two will be handled via product qualification.
|-
| ForeignExchange || Data Type || From FpML: A type defining either a spot or forward FX transactions.
|-
| ExchangeRate || Data Type || A class that is used for describing the exchange rate for a particular transaction.
|-
| CrossRate || Data Type || A class that is used for including the currency exchange rates used to cross between the traded currencies for non-base currency FX contracts.
|-
| FxCashSettlement || Data Type || A class that is used for describing cash settlement of an option / non deliverable forward. It includes the currency to settle into together with the fixings required to calculate the currency amount.
|-
| FxFixing || Data Type || A class that specifies the source for and timing of a fixing of an exchange rate. This is used in the agreement of non-deliverable forward trades as well as various types of FX OTC options that require observations against a particular rate.
|-
| FxRateSourceFixing || Data Type || Describes a rate source to be fixed and the date the fixing occurs
|-
| FxSettlementRateSource || Data Type || The source of the Foreign Exchange settlement rate.
|-
| FxInformationSource || Data Type || Information source specific to Foreign Exchange products.
|-
| FloatingRateIndexEnum || Enumeration || The enumerated values to specify the list of floating rate index.
|-
| BondReference || Data Type || Reference to a bond underlier to represent an asset swap or Condition Precedent Bond.
|-
| CalculationPeriodBase || Data Type || The calculation period adjusted start and end dates, which are the baseline arguments needed to compute an interest accrual calculation.
|-
| CalculationPeriod || Data Type || A data defining: the parameters used in the calculation of a fixed or floating rate calculation period amount. This data forms: part of cashflows representation of a swap stream.
|-
| CalculationPeriodDates || Data Type || A data for: defining the parameters used to generate the calculation period dates schedule, including the specification of any initial or final stub calculation periods. A calculation period schedule consists of an optional initial stub calculation period, one or more regular calculation periods and an optional final stub calculation period. In the absence of any initial or final stub calculation periods, the regular part of the calculation period schedule is assumed to be between the effective date and the termination date. No implicit stubs are allowed, i.e. stubs must be explicitly specified using an appropriate combination of firstPeriodStartDate, firstRegularPeriodStartDate and lastRegularPeriodEndDate.
|-
| CancelableProvision || Data Type || A data defining: the right of a party to cancel a swap transaction on the specified exercise dates. The provision is for 'walk-away' cancellation (i.e. the fair value of the swap is not paid). A fee payable on exercise can be specified. As a difference from the FpML construct, the canonical model extends the BuyerSeller class.
|-
| CancelableProvisionAdjustedDates || Data Type || A data to: define the adjusted dates for a cancelable provision on a swap transaction.
|-
| CancellationEvent || Data Type || The adjusted dates for a specific cancellation date, including the adjusted exercise date and adjusted termination date.
|-
| CashflowRepresentation || Data Type || A data defining: the cashflow representation of a swap trade.
|-
| CashPriceMethod || Data Type || A type defining the parameters necessary for each of the ISDA cash price methods for cash settlement.
|-
| CashSettlementPaymentDate || Data Type || A data defining: the cash settlement payment date(s) as either a set of explicit dates, together with applicable adjustments, or as a date relative to some other (anchor) date, or as any date in a range of contiguous business days.
|-
| CrossCurrencyMethod || Data Type || A data to: represent the cash settlement method defined in the 2006 ISDA Definitions, Section 18.3. Cash Settlement Methods, paragraph (g) (published in Supplement number 28).
|-
| DateRelativeToCalculationPeriodDates || Data Type || A data to: provide the ability to point to multiple payment nodes in the document through the unbounded paymentDatesReference.
|-
| DateRelativeToPaymentDates || Data Type || A data to: provide the ability to point to multiple payment nodes in the document through the unbounded paymentDatesReference.
|-
| DiscountingMethod || Data Type || A data defining: discounting information. The 2000 ISDA definitions, section 8.4. discounting (related to the calculation of a discounted fixed amount or floating amount) apply. This type must only be included if discounting applies.
|-
| EarlyTerminationEvent || Data Type || A data to: define the adjusted dates associated with an early termination provision.
|-
| EarlyTerminationProvision || Data Type || A data defining: an early termination provision for a swap. This early termination is at fair value, i.e. on termination the fair value of the product must be settled between the parties.
|-
| ExerciseEvent || Data Type || A data defining: the adjusted dates associated with a particular exercise event.
|-
| ExercisePeriod || Data Type || This defines the time interval to the start of the exercise period, i.e. the earliest exercise date, and the frequency of subsequent exercise dates (if any).
|-
| ExtendibleProvision || Data Type || A data defining: an option to extend an existing swap transaction on the specified exercise dates for a term ending on the specified new termination date. As a difference from FpML, it extends the BuyerSeller class, which represents the BuyerSeller.model.
|-
| ExtendibleProvisionAdjustedDates || Data Type || A data defining: the adjusted dates associated with a provision to extend a swap.
|-
| ExtensionEvent || Data Type || A data to: define the adjusted dates associated with an individual extension event.
|-
| FallbackReferencePrice || Data Type || The method, prioritised by the order it is listed in this element, to get a replacement rate for the disrupted settlement rate option.
|-
| FinalCalculationPeriodDateAdjustment || Data Type || A data to: define business date convention adjustment to final payment period per leg.
|-
| FloatingRateDefinition || Data Type || A data defining: parameters associated with a floating rate reset. This data forms: part of the cashflows representation of a stream.
|-
| FxFixingDate || Data Type || A data that: is extending the Offset structure for providing the ability to specify an FX fixing date as an offset to dates specified somewhere else in the document.
|-
| FxLinkedNotionalAmount || Data Type || A data to: describe the cashflow representation for FX linked notionals.
|-
| FxLinkedNotionalSchedule || Data Type || A data to: describe a notional schedule where each notional that applies to a calculation period is calculated with reference to a notional amount or notional amount schedule in a different currency by means of a spot currency exchange rate which is normally observed at the beginning of each period.
|-
| InflationRateSpecification || Data Type || A data to: specify the inflation rate.
|-
| FixedInterestRate || Data Type || Data to specify a fixed interest rate price.
|-
| FloatingInterestRate || Data Type || Data to specify a floating interest rate price.
|-
| MandatoryEarlyTermination || Data Type || A data to: define an early termination provision for which exercise is mandatory.
|-
| MandatoryEarlyTerminationAdjustedDates || Data Type || A data defining: the adjusted dates associated with a mandatory early termination provision.
|-
| NonDeliverableSettlement || Data Type || A data defining: the parameters used when the reference currency of the payout is non-deliverable.
|-
| OptionalEarlyTermination || Data Type || A data defining: an early termination provision where either or both parties have the right to exercise.
|-
| OptionalEarlyTerminationAdjustedDates || Data Type || A data defining: the adjusted dates associated with an optional early termination provision.
|-
| OptionCashSettlement || Data Type || A data to: define the cash settlement terms for a product where cash settlement is applicable.
|-
| PaymentCalculationPeriod || Data Type || A data defining: the adjusted payment date and associated calculation period parameters required to calculate the actual or projected payment amount. This data forms: part of the cashflow representation of a swap stream.
|-
| PriceSourceDisruption || Data Type || A data defining: the parameters used to get a price quote to replace the settlement rate option that is disrupted.
|-
| PrincipalExchange || Data Type || A data for: defining a principal exchange amount and adjusted exchange date. This data forms: part of the cashflow representation of a swap stream.
|-
| ResetDates || Data Type || A data defining: the parameters used to generate the reset dates schedule and associated fixing dates. The reset dates are the dates on which the new index value (which is observed on the fixing date) is applied for each period and on which the interest rate hence begins to accrue.
|-
| SettlementProvision || Data Type || A data defining: the specification of settlement terms, occurring when the settlement currency is different to the notional currency of the trade.
|-
| StubCalculationPeriodAmount || Data Type || A data defining: how the initial or final stub calculation period amounts is calculated. For example, the rate to be applied to the initial or final stub calculation period may be the linear interpolation of two different tenors for the floating rate index specified in the calculation period amount component, e.g. A two month stub period may used the linear interpolation of a one month and three month floating rate. The different rate tenors would be specified in this component. Note that a maximum of two rate tenors can be specified. If a stub period uses a single index tenor and this is the same as that specified in the calculation period amount component then the initial stub or final stub component, as the case may be, must not be included.
|-
| ValuationPostponement || Data Type || Specifies how long to wait to get a quote from a settlement rate option upon a price source disruption.
|-
| YieldCurveMethod || Data Type || A data defining: the parameters required for each of the ISDA defined yield curve methods for cash settlement.
|-
| FixedAmount || Function || 2006 ISDA Definition Article 5 Section 5.1. Calculation of a Fixed Amount: The Fixed Amount payable by a party on a Payment Date will be: (a) if an amount is specified for the Swap Transaction as the Fixed Amount payable by that party for that Payment Date or for the related Calculation Period, that amount; or (b) if an amount is not specified for the Swap Transaction as the Fixed Amount payable by that party for that Payment Date or for the related Calculation Period, an amount calculated on a formula basis for that Payment Date or for the related Calculation Period as follows: Fixed Amount = Calculation Amount × Fixed Rate × Day Count Fraction.
|-
| FloatingAmount || Function || 2006 ISDA Definition Article 6 Section 6.1. Calculation of a Floating Amount: Subject to the provisions of Section 6.4 (Negative Interest Rates), the Floating Amount payable by a party on a Payment Date will be: (a) if Compounding is not specified for the Swap Transaction or that party, an amount calculated on a formula basis for that Payment Date or for the related Calculation Period as follows: Floating Amount = Calculation Amount × Floating Rate + Spread × Floating Rate Day Count Fraction (b) if “Compounding” is specified to be applicable to the Swap Transaction or that party and 'Flat Compounding' is not specified, an amount equal to the sum of the Compounding Period Amounts for each of the Compounding Periods in the related Calculation Period; or (c) if 'Flat Compounding' is specified to be applicable to the Swap Transaction or that party, an amount equal to the sum of the Basic Compounding Period Amounts for each of the Compounding Periods in the related Calculation Period plus the sum of the Additional Compounding Period Amounts for each such Compounding Period.
|-
| DayCountFraction || Function || A description of inputs and outputs for all day count fraction calculations
|-
| ResolveRateIndex || Function || The function to specify that the floating rate index enumeration will be expressed as a number once the rate is observed.
|-
| PeriodsInYear || Function || 
|-
| CalculationPeriod || Function || 2006 ISDA Definition Section 4.13. 'Calculation Period' means, in respect of a Swap Transaction and a party, each period from, and including, one Period End Date of that party to, but excluding, the next following applicable Period End Date during the Term of the Swap Transaction, except that (a) the initial Calculation Period for the party will commence on, and include, the Effective Date and (b) the final Calculation Period for the party will end on, but exclude, the Termination Date.
|}
